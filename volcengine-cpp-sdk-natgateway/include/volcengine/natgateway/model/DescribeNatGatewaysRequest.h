/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#ifndef VOLCENGINE_NATGATEWAY_DESCRIBENATGATEWAYSREQUEST_H
#define VOLCENGINE_NATGATEWAY_DESCRIBENATGATEWAYSREQUEST_H
#include <string>
#include <volcengine/core/RequestBuilder.h>
#include "volcengine/natgateway/model/TagFilterForDescribeNatGatewaysInput.h"

namespace volcengine{
    namespace natgateway{
        class DescribeNatGatewaysRequest {
        public:
            DescribeNatGatewaysRequest();
            ~DescribeNatGatewaysRequest() = default;

            RequestBuilder withRequestBuilder(RequestBuilder rb, const std::string &chain)const;

            const std::string &getDescription()const { return  v_description; }
            bool DescriptionHasBeenSet() const { return v_descriptionHasBeenSet; }
            void setDescription(const std::string &s_description ) {
                v_description = s_description;
                v_descriptionHasBeenSet = true;
            }
            const std::vector<std::string> &getNatGatewayIds()const { return  v_natGatewayIds; }
            bool NatGatewayIdsHasBeenSet() const { return v_natGatewayIdsHasBeenSet; }
            void setNatGatewayIds(const std::vector<std::string> &s_natGatewayIds ) {
                v_natGatewayIds = s_natGatewayIds;
                v_natGatewayIdsHasBeenSet = true;
            }
            const std::string &getNatGatewayName()const { return  v_natGatewayName; }
            bool NatGatewayNameHasBeenSet() const { return v_natGatewayNameHasBeenSet; }
            void setNatGatewayName(const std::string &s_natGatewayName ) {
                v_natGatewayName = s_natGatewayName;
                v_natGatewayNameHasBeenSet = true;
            }
            int getPageNumber()const { return  v_pageNumber; }
            bool PageNumberHasBeenSet() const { return v_pageNumberHasBeenSet; }
            void setPageNumber(const int s_pageNumber ) {
                v_pageNumber = s_pageNumber;
                v_pageNumberHasBeenSet = true;
            }
            int getPageSize()const { return  v_pageSize; }
            bool PageSizeHasBeenSet() const { return v_pageSizeHasBeenSet; }
            void setPageSize(const int s_pageSize ) {
                v_pageSize = s_pageSize;
                v_pageSizeHasBeenSet = true;
            }
            const std::string &getProjectName()const { return  v_projectName; }
            bool ProjectNameHasBeenSet() const { return v_projectNameHasBeenSet; }
            void setProjectName(const std::string &s_projectName ) {
                v_projectName = s_projectName;
                v_projectNameHasBeenSet = true;
            }
            const std::string &getSpec()const { return  v_spec; }
            bool SpecHasBeenSet() const { return v_specHasBeenSet; }
            void setSpec(const std::string &s_spec ) {
                v_spec = s_spec;
                v_specHasBeenSet = true;
            }
            const std::string &getSubnetId()const { return  v_subnetId; }
            bool SubnetIdHasBeenSet() const { return v_subnetIdHasBeenSet; }
            void setSubnetId(const std::string &s_subnetId ) {
                v_subnetId = s_subnetId;
                v_subnetIdHasBeenSet = true;
            }
            const std::vector<TagFilterForDescribeNatGatewaysInput> &getTagFilters()const { return  v_tagFilters; }
            bool TagFiltersHasBeenSet() const { return v_tagFiltersHasBeenSet; }
            void setTagFilters(const std::vector<TagFilterForDescribeNatGatewaysInput> &s_tagFilters ) {
                v_tagFilters = s_tagFilters;
                v_tagFiltersHasBeenSet = true;
            }
            const std::string &getVpcId()const { return  v_vpcId; }
            bool VpcIdHasBeenSet() const { return v_vpcIdHasBeenSet; }
            void setVpcId(const std::string &s_vpcId ) {
                v_vpcId = s_vpcId;
                v_vpcIdHasBeenSet = true;
            }
        private:
            std::string v_description;
            bool v_descriptionHasBeenSet;

            std::vector<std::string> v_natGatewayIds;
            bool v_natGatewayIdsHasBeenSet;

            std::string v_natGatewayName;
            bool v_natGatewayNameHasBeenSet;

            int v_pageNumber;
            bool v_pageNumberHasBeenSet;

            int v_pageSize;
            bool v_pageSizeHasBeenSet;

            std::string v_projectName;
            bool v_projectNameHasBeenSet;

            std::string v_spec;
            bool v_specHasBeenSet;

            std::string v_subnetId;
            bool v_subnetIdHasBeenSet;

            std::vector<TagFilterForDescribeNatGatewaysInput> v_tagFilters;
            bool v_tagFiltersHasBeenSet;

            std::string v_vpcId;
            bool v_vpcIdHasBeenSet;

        };
    }
}
#endif // !VOLCENGINE_NATGATEWAY_DESCRIBENATGATEWAYSREQUEST_H