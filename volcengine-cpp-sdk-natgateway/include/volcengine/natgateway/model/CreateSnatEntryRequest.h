/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#ifndef VOLCENGINE_NATGATEWAY_CREATESNATENTRYREQUEST_H
#define VOLCENGINE_NATGATEWAY_CREATESNATENTRYREQUEST_H
#include <string>
#include <volcengine/core/RequestBuilder.h>

namespace volcengine{
    namespace natgateway{
        class CreateSnatEntryRequest {
        public:
            CreateSnatEntryRequest();
            ~CreateSnatEntryRequest() = default;

            RequestBuilder withRequestBuilder(RequestBuilder rb, const std::string &chain)const;

            const std::string &getEipId()const { return  v_eipId; }
            bool EipIdHasBeenSet() const { return v_eipIdHasBeenSet; }
            void setEipId(const std::string &s_eipId ) {
                v_eipId = s_eipId;
                v_eipIdHasBeenSet = true;
            }
            const std::string &getNatGatewayId()const { return  v_natGatewayId; }
            bool NatGatewayIdHasBeenSet() const { return v_natGatewayIdHasBeenSet; }
            void setNatGatewayId(const std::string &s_natGatewayId ) {
                v_natGatewayId = s_natGatewayId;
                v_natGatewayIdHasBeenSet = true;
            }
            const std::string &getSnatEntryName()const { return  v_snatEntryName; }
            bool SnatEntryNameHasBeenSet() const { return v_snatEntryNameHasBeenSet; }
            void setSnatEntryName(const std::string &s_snatEntryName ) {
                v_snatEntryName = s_snatEntryName;
                v_snatEntryNameHasBeenSet = true;
            }
            const std::string &getSourceCidr()const { return  v_sourceCidr; }
            bool SourceCidrHasBeenSet() const { return v_sourceCidrHasBeenSet; }
            void setSourceCidr(const std::string &s_sourceCidr ) {
                v_sourceCidr = s_sourceCidr;
                v_sourceCidrHasBeenSet = true;
            }
            const std::string &getSubnetId()const { return  v_subnetId; }
            bool SubnetIdHasBeenSet() const { return v_subnetIdHasBeenSet; }
            void setSubnetId(const std::string &s_subnetId ) {
                v_subnetId = s_subnetId;
                v_subnetIdHasBeenSet = true;
            }
        private:
            std::string v_eipId;
            bool v_eipIdHasBeenSet;

            std::string v_natGatewayId;
            bool v_natGatewayIdHasBeenSet;

            std::string v_snatEntryName;
            bool v_snatEntryNameHasBeenSet;

            std::string v_sourceCidr;
            bool v_sourceCidrHasBeenSet;

            std::string v_subnetId;
            bool v_subnetIdHasBeenSet;

        };
    }
}
#endif // !VOLCENGINE_NATGATEWAY_CREATESNATENTRYREQUEST_H