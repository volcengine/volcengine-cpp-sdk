/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#ifndef VOLCENGINE_NATGATEWAY_NATGATEWAYCLIENT_H
#define VOLCENGINE_NATGATEWAY_NATGATEWAYCLIENT_H
#include <string>
#include <volcengine/core/ResultData.h>
#include <volcengine/core/VolcengineMetaData.h>
#include <volcengine/core/VolcengineClient.h>
#include "volcengine/natgateway/model/CreateDnatEntryRequest.h"
#include "volcengine/natgateway/model/CreateDnatEntryResult.h"
#include "volcengine/natgateway/model/CreateNatGatewayRequest.h"
#include "volcengine/natgateway/model/CreateNatGatewayResult.h"
#include "volcengine/natgateway/model/CreateSnatEntryRequest.h"
#include "volcengine/natgateway/model/CreateSnatEntryResult.h"
#include "volcengine/natgateway/model/DeleteDnatEntryRequest.h"
#include "volcengine/natgateway/model/DeleteDnatEntryResult.h"
#include "volcengine/natgateway/model/DeleteNatGatewayRequest.h"
#include "volcengine/natgateway/model/DeleteNatGatewayResult.h"
#include "volcengine/natgateway/model/DeleteSnatEntryRequest.h"
#include "volcengine/natgateway/model/DeleteSnatEntryResult.h"
#include "volcengine/natgateway/model/DescribeDnatEntriesRequest.h"
#include "volcengine/natgateway/model/DescribeDnatEntriesResult.h"
#include "volcengine/natgateway/model/DescribeDnatEntryAttributesRequest.h"
#include "volcengine/natgateway/model/DescribeDnatEntryAttributesResult.h"
#include "volcengine/natgateway/model/DescribeNatGatewayAttributesRequest.h"
#include "volcengine/natgateway/model/DescribeNatGatewayAttributesResult.h"
#include "volcengine/natgateway/model/DescribeNatGatewaysRequest.h"
#include "volcengine/natgateway/model/DescribeNatGatewaysResult.h"
#include "volcengine/natgateway/model/DescribeSnatEntriesRequest.h"
#include "volcengine/natgateway/model/DescribeSnatEntriesResult.h"
#include "volcengine/natgateway/model/DescribeSnatEntryAttributesRequest.h"
#include "volcengine/natgateway/model/DescribeSnatEntryAttributesResult.h"
#include "volcengine/natgateway/model/ListNatGatewayAvailableZonesRequest.h"
#include "volcengine/natgateway/model/ListNatGatewayAvailableZonesResult.h"
#include "volcengine/natgateway/model/ModifyDnatEntryAttributesRequest.h"
#include "volcengine/natgateway/model/ModifyDnatEntryAttributesResult.h"
#include "volcengine/natgateway/model/ModifyNatGatewayAttributesRequest.h"
#include "volcengine/natgateway/model/ModifyNatGatewayAttributesResult.h"
#include "volcengine/natgateway/model/ModifySnatEntryAttributesRequest.h"
#include "volcengine/natgateway/model/ModifySnatEntryAttributesResult.h"
namespace volcengine{
    namespace natgateway{
        class NatgatewayClient {
        public:
            explicit NatgatewayClient(const std::shared_ptr<VolcengineClientConfig> &config);

            ~NatgatewayClient() = default;

            ResultData<VolcengineMetadata, CreateDnatEntryResult> CreateDnatEntry(const CreateDnatEntryRequest &input) const;

            ResultData<VolcengineMetadata, CreateNatGatewayResult> CreateNatGateway(const CreateNatGatewayRequest &input) const;

            ResultData<VolcengineMetadata, CreateSnatEntryResult> CreateSnatEntry(const CreateSnatEntryRequest &input) const;

            ResultData<VolcengineMetadata, DeleteDnatEntryResult> DeleteDnatEntry(const DeleteDnatEntryRequest &input) const;

            ResultData<VolcengineMetadata, DeleteNatGatewayResult> DeleteNatGateway(const DeleteNatGatewayRequest &input) const;

            ResultData<VolcengineMetadata, DeleteSnatEntryResult> DeleteSnatEntry(const DeleteSnatEntryRequest &input) const;

            ResultData<VolcengineMetadata, DescribeDnatEntriesResult> DescribeDnatEntries(const DescribeDnatEntriesRequest &input) const;

            ResultData<VolcengineMetadata, DescribeDnatEntryAttributesResult> DescribeDnatEntryAttributes(const DescribeDnatEntryAttributesRequest &input) const;

            ResultData<VolcengineMetadata, DescribeNatGatewayAttributesResult> DescribeNatGatewayAttributes(const DescribeNatGatewayAttributesRequest &input) const;

            ResultData<VolcengineMetadata, DescribeNatGatewaysResult> DescribeNatGateways(const DescribeNatGatewaysRequest &input) const;

            ResultData<VolcengineMetadata, DescribeSnatEntriesResult> DescribeSnatEntries(const DescribeSnatEntriesRequest &input) const;

            ResultData<VolcengineMetadata, DescribeSnatEntryAttributesResult> DescribeSnatEntryAttributes(const DescribeSnatEntryAttributesRequest &input) const;

            ResultData<VolcengineMetadata, ListNatGatewayAvailableZonesResult> ListNatGatewayAvailableZones(const ListNatGatewayAvailableZonesRequest &input) const;

            ResultData<VolcengineMetadata, ModifyDnatEntryAttributesResult> ModifyDnatEntryAttributes(const ModifyDnatEntryAttributesRequest &input) const;

            ResultData<VolcengineMetadata, ModifyNatGatewayAttributesResult> ModifyNatGatewayAttributes(const ModifyNatGatewayAttributesRequest &input) const;

            ResultData<VolcengineMetadata, ModifySnatEntryAttributesResult> ModifySnatEntryAttributes(const ModifySnatEntryAttributesRequest &input) const;

        private:
            std::shared_ptr<VolcengineClient> client_;
            std::string svc_ = "natgateway";
        };
    }
}
#endif // !VOLCENGINE_NATGATEWAY_NATGATEWAYCLIENT_H