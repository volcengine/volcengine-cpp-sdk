/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#ifndef VOLCENGINE_VKE_FILTERFORLISTKUBECONFIGSINPUT_H
#define VOLCENGINE_VKE_FILTERFORLISTKUBECONFIGSINPUT_H
#include <string>
#include "volcengine/core/utils/json.hpp"
#include <volcengine/core/RequestBuilder.h>
using namespace nlohmann;

namespace volcengine{
    namespace vke{
        class FilterForListKubeconfigsInput {
        public:
            FilterForListKubeconfigsInput();
            ~FilterForListKubeconfigsInput() = default;

            static RequestBuilder withRequestBuilder(RequestBuilder rb, const std::string &chain);
            json jsonPayload() const;

            const std::vector<std::string> &getClusterIds()const { return  v_clusterIds; }
            bool ClusterIdsHasBeenSet() const { return v_clusterIdsHasBeenSet; }
            void setClusterIds(const std::vector<std::string> &s_clusterIds ) {
                v_clusterIds = s_clusterIds;
                v_clusterIdsHasBeenSet = true;
            }
            const std::vector<std::string> &getIds()const { return  v_ids; }
            bool IdsHasBeenSet() const { return v_idsHasBeenSet; }
            void setIds(const std::vector<std::string> &s_ids ) {
                v_ids = s_ids;
                v_idsHasBeenSet = true;
            }
            const std::vector<std::string> &getTypes()const { return  v_types; }
            bool TypesHasBeenSet() const { return v_typesHasBeenSet; }
            void setTypes(const std::vector<std::string> &s_types ) {
                v_types = s_types;
                v_typesHasBeenSet = true;
            }
            const std::vector<int> &getUserIds()const { return  v_userIds; }
            bool UserIdsHasBeenSet() const { return v_userIdsHasBeenSet; }
            void setUserIds(const std::vector<int> &s_userIds ) {
                v_userIds = s_userIds;
                v_userIdsHasBeenSet = true;
            }
        private:
            std::vector<std::string> v_clusterIds;
            bool v_clusterIdsHasBeenSet;

            std::vector<std::string> v_ids;
            bool v_idsHasBeenSet;

            std::vector<std::string> v_types;
            bool v_typesHasBeenSet;

            std::vector<int> v_userIds;
            bool v_userIdsHasBeenSet;

        };
    }
}
#endif // !VOLCENGINE_VKE_FILTERFORLISTKUBECONFIGSINPUT_H