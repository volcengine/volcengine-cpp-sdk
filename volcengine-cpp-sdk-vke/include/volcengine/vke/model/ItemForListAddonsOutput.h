/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#ifndef VOLCENGINE_VKE_ITEMFORLISTADDONSOUTPUT_H
#define VOLCENGINE_VKE_ITEMFORLISTADDONSOUTPUT_H
#include <string>
#include <volcengine/core/RequestBuilder.h>
#include "volcengine/core/utils/json.hpp"
#include "volcengine/vke/model/StatusForListAddonsOutput.h"
namespace volcengine{
    namespace vke{
        class ItemForListAddonsOutput {
        public:
            ItemForListAddonsOutput() = default;
            ~ItemForListAddonsOutput() = default;
            void fromJsonString(const std::string &input);
            const std::string &getClusterId() const { return  v_clusterId; }
            void setClusterId(const std::string &s_clusterId ) {
                v_clusterId = s_clusterId;
            }
            const std::string &getConfig() const { return  v_config; }
            void setConfig(const std::string &s_config ) {
                v_config = s_config;
            }
            const std::string &getCreateClientToken() const { return  v_createClientToken; }
            void setCreateClientToken(const std::string &s_createClientToken ) {
                v_createClientToken = s_createClientToken;
            }
            const std::string &getCreateTime() const { return  v_createTime; }
            void setCreateTime(const std::string &s_createTime ) {
                v_createTime = s_createTime;
            }
            const std::string &getDeployMode() const { return  v_deployMode; }
            void setDeployMode(const std::string &s_deployMode ) {
                v_deployMode = s_deployMode;
            }
            const std::string &getDeployNodeType() const { return  v_deployNodeType; }
            void setDeployNodeType(const std::string &s_deployNodeType ) {
                v_deployNodeType = s_deployNodeType;
            }
            const std::string &getName() const { return  v_name; }
            void setName(const std::string &s_name ) {
                v_name = s_name;
            }
            const std::shared_ptr<StatusForListAddonsOutput> &getStatus() const { return  v_status; }
            void setStatus(const std::shared_ptr<StatusForListAddonsOutput> &s_status ) {
                v_status = s_status;
            }
            const std::string &getUpdateClientToken() const { return  v_updateClientToken; }
            void setUpdateClientToken(const std::string &s_updateClientToken ) {
                v_updateClientToken = s_updateClientToken;
            }
            const std::string &getUpdateTime() const { return  v_updateTime; }
            void setUpdateTime(const std::string &s_updateTime ) {
                v_updateTime = s_updateTime;
            }
            const std::string &getVersion() const { return  v_version; }
            void setVersion(const std::string &s_version ) {
                v_version = s_version;
            }
        private:
            std::string v_clusterId;
            std::string v_config;
            std::string v_createClientToken;
            std::string v_createTime;
            std::string v_deployMode;
            std::string v_deployNodeType;
            std::string v_name;
            std::shared_ptr<StatusForListAddonsOutput> v_status;
            std::string v_updateClientToken;
            std::string v_updateTime;
            std::string v_version;
        };
    }
}
#endif // !VOLCENGINE_VKE_ITEMFORLISTADDONSOUTPUT_H