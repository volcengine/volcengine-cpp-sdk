/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#ifndef VOLCENGINE_VKE_SECURITYFORLISTNODEPOOLSOUTPUT_H
#define VOLCENGINE_VKE_SECURITYFORLISTNODEPOOLSOUTPUT_H
#include <string>
#include <volcengine/core/RequestBuilder.h>
#include "volcengine/core/utils/json.hpp"
#include "volcengine/vke/model/LoginForListNodePoolsOutput.h"
namespace volcengine{
    namespace vke{
        class SecurityForListNodePoolsOutput {
        public:
            SecurityForListNodePoolsOutput() = default;
            ~SecurityForListNodePoolsOutput() = default;
            void fromJsonString(const std::string &input);
            const std::shared_ptr<LoginForListNodePoolsOutput> &getLogin() const { return  v_login; }
            void setLogin(const std::shared_ptr<LoginForListNodePoolsOutput> &s_login ) {
                v_login = s_login;
            }
            const std::vector<std::string> &getSecurityGroupIds() const { return  v_securityGroupIds; }
            void setSecurityGroupIds(const std::vector<std::string> &s_securityGroupIds ) {
                v_securityGroupIds = s_securityGroupIds;
            }
            const std::vector<std::string> &getSecurityStrategies() const { return  v_securityStrategies; }
            void setSecurityStrategies(const std::vector<std::string> &s_securityStrategies ) {
                v_securityStrategies = s_securityStrategies;
            }
            const bool isSecurityStrategyEnabled() const { return  v_securityStrategyEnabled; }
            void setSecurityStrategyEnabled(const bool s_securityStrategyEnabled ) {
                v_securityStrategyEnabled = s_securityStrategyEnabled;
            }
        private:
            std::shared_ptr<LoginForListNodePoolsOutput> v_login;
            std::vector<std::string> v_securityGroupIds;
            std::vector<std::string> v_securityStrategies;
            bool v_securityStrategyEnabled{};
        };
    }
}
#endif // !VOLCENGINE_VKE_SECURITYFORLISTNODEPOOLSOUTPUT_H