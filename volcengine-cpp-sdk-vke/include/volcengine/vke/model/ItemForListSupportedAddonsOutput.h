/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#ifndef VOLCENGINE_VKE_ITEMFORLISTSUPPORTEDADDONSOUTPUT_H
#define VOLCENGINE_VKE_ITEMFORLISTSUPPORTEDADDONSOUTPUT_H
#include <string>
#include <volcengine/core/RequestBuilder.h>
#include "volcengine/core/utils/json.hpp"
#include "volcengine/vke/model/VersionForListSupportedAddonsOutput.h"
namespace volcengine{
    namespace vke{
        class ItemForListSupportedAddonsOutput {
        public:
            ItemForListSupportedAddonsOutput() = default;
            ~ItemForListSupportedAddonsOutput() = default;
            void fromJsonString(const std::string &input);
            const std::vector<std::string> &getCategories() const { return  v_categories; }
            void setCategories(const std::vector<std::string> &s_categories ) {
                v_categories = s_categories;
            }
            const std::string &getDeployMode() const { return  v_deployMode; }
            void setDeployMode(const std::string &s_deployMode ) {
                v_deployMode = s_deployMode;
            }
            const std::vector<std::string> &getDeployNodeTypes() const { return  v_deployNodeTypes; }
            void setDeployNodeTypes(const std::vector<std::string> &s_deployNodeTypes ) {
                v_deployNodeTypes = s_deployNodeTypes;
            }
            const std::string &getName() const { return  v_name; }
            void setName(const std::string &s_name ) {
                v_name = s_name;
            }
            const std::string &getNecessary() const { return  v_necessary; }
            void setNecessary(const std::string &s_necessary ) {
                v_necessary = s_necessary;
            }
            const std::vector<std::string> &getPodNetworkModes() const { return  v_podNetworkModes; }
            void setPodNetworkModes(const std::vector<std::string> &s_podNetworkModes ) {
                v_podNetworkModes = s_podNetworkModes;
            }
            const std::vector<VersionForListSupportedAddonsOutput> &getVersions() const { return  v_versions; }
            void setVersions(const std::vector<VersionForListSupportedAddonsOutput> &s_versions ) {
                v_versions = s_versions;
            }
        private:
            std::vector<std::string> v_categories;
            std::string v_deployMode;
            std::vector<std::string> v_deployNodeTypes;
            std::string v_name;
            std::string v_necessary;
            std::vector<std::string> v_podNetworkModes;
            std::vector<VersionForListSupportedAddonsOutput> v_versions;
        };
    }
}
#endif // !VOLCENGINE_VKE_ITEMFORLISTSUPPORTEDADDONSOUTPUT_H