/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#ifndef VOLCENGINE_VKE_PUBLICACCESSNETWORKCONFIGFORUPDATECLUSTERCONFIGINPUT_H
#define VOLCENGINE_VKE_PUBLICACCESSNETWORKCONFIGFORUPDATECLUSTERCONFIGINPUT_H
#include <string>
#include "volcengine/core/utils/json.hpp"
#include <volcengine/core/RequestBuilder.h>
using namespace nlohmann;

namespace volcengine{
    namespace vke{
        class PublicAccessNetworkConfigForUpdateClusterConfigInput {
        public:
            PublicAccessNetworkConfigForUpdateClusterConfigInput();
            ~PublicAccessNetworkConfigForUpdateClusterConfigInput() = default;

            static RequestBuilder withRequestBuilder(RequestBuilder rb, const std::string &chain);
            json jsonPayload() const;

            int getBandwidth()const { return  v_bandwidth; }
            bool BandwidthHasBeenSet() const { return v_bandwidthHasBeenSet; }
            void setBandwidth(const int s_bandwidth ) {
                v_bandwidth = s_bandwidth;
                v_bandwidthHasBeenSet = true;
            }
            int getBillingType()const { return  v_billingType; }
            bool BillingTypeHasBeenSet() const { return v_billingTypeHasBeenSet; }
            void setBillingType(const int s_billingType ) {
                v_billingType = s_billingType;
                v_billingTypeHasBeenSet = true;
            }
            const std::string &getIsp()const { return  v_isp; }
            bool IspHasBeenSet() const { return v_ispHasBeenSet; }
            void setIsp(const std::string &s_isp ) {
                v_isp = s_isp;
                v_ispHasBeenSet = true;
            }
        private:
            int v_bandwidth;
            bool v_bandwidthHasBeenSet;

            int v_billingType;
            bool v_billingTypeHasBeenSet;

            std::string v_isp;
            bool v_ispHasBeenSet;

        };
    }
}
#endif // !VOLCENGINE_VKE_PUBLICACCESSNETWORKCONFIGFORUPDATECLUSTERCONFIGINPUT_H