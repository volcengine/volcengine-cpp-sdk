/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#ifndef VOLCENGINE_VKE_UPDATECLUSTERCONFIGREQUEST_H
#define VOLCENGINE_VKE_UPDATECLUSTERCONFIGREQUEST_H
#include <string>
#include "volcengine/core/utils/json.hpp"
#include <volcengine/core/RequestBuilder.h>
#include "volcengine/vke/model/ClusterConfigForUpdateClusterConfigInput.h"
#include "volcengine/vke/model/LoggingConfigForUpdateClusterConfigInput.h"
#include "volcengine/vke/model/PodsConfigForUpdateClusterConfigInput.h"
using namespace nlohmann;

namespace volcengine{
    namespace vke{
        class UpdateClusterConfigRequest {
        public:
            UpdateClusterConfigRequest();
            ~UpdateClusterConfigRequest() = default;

            static RequestBuilder withRequestBuilder(RequestBuilder rb, const std::string &chain);
            json jsonPayload() const;

            const std::string &getClientToken()const { return  v_clientToken; }
            bool ClientTokenHasBeenSet() const { return v_clientTokenHasBeenSet; }
            void setClientToken(const std::string &s_clientToken ) {
                v_clientToken = s_clientToken;
                v_clientTokenHasBeenSet = true;
            }
            const std::shared_ptr<ClusterConfigForUpdateClusterConfigInput> &getClusterConfig()const { return  v_clusterConfig; }
            bool ClusterConfigHasBeenSet() const { return v_clusterConfigHasBeenSet; }
            void setClusterConfig(const std::shared_ptr<ClusterConfigForUpdateClusterConfigInput> &s_clusterConfig ) {
                v_clusterConfig = s_clusterConfig;
                v_clusterConfigHasBeenSet = true;
            }
            bool isDeleteProtectionEnabled()const { return  v_deleteProtectionEnabled; }
            bool DeleteProtectionEnabledHasBeenSet() const { return v_deleteProtectionEnabledHasBeenSet; }
            void setDeleteProtectionEnabled(const bool s_deleteProtectionEnabled ) {
                v_deleteProtectionEnabled = s_deleteProtectionEnabled;
                v_deleteProtectionEnabledHasBeenSet = true;
            }
            const std::string &getDescription()const { return  v_description; }
            bool DescriptionHasBeenSet() const { return v_descriptionHasBeenSet; }
            void setDescription(const std::string &s_description ) {
                v_description = s_description;
                v_descriptionHasBeenSet = true;
            }
            const std::string &getId()const { return  v_id; }
            bool IdHasBeenSet() const { return v_idHasBeenSet; }
            void setId(const std::string &s_id ) {
                v_id = s_id;
                v_idHasBeenSet = true;
            }
            const std::shared_ptr<LoggingConfigForUpdateClusterConfigInput> &getLoggingConfig()const { return  v_loggingConfig; }
            bool LoggingConfigHasBeenSet() const { return v_loggingConfigHasBeenSet; }
            void setLoggingConfig(const std::shared_ptr<LoggingConfigForUpdateClusterConfigInput> &s_loggingConfig ) {
                v_loggingConfig = s_loggingConfig;
                v_loggingConfigHasBeenSet = true;
            }
            const std::string &getName()const { return  v_name; }
            bool NameHasBeenSet() const { return v_nameHasBeenSet; }
            void setName(const std::string &s_name ) {
                v_name = s_name;
                v_nameHasBeenSet = true;
            }
            const std::shared_ptr<PodsConfigForUpdateClusterConfigInput> &getPodsConfig()const { return  v_podsConfig; }
            bool PodsConfigHasBeenSet() const { return v_podsConfigHasBeenSet; }
            void setPodsConfig(const std::shared_ptr<PodsConfigForUpdateClusterConfigInput> &s_podsConfig ) {
                v_podsConfig = s_podsConfig;
                v_podsConfigHasBeenSet = true;
            }
        private:
            std::string v_clientToken;
            bool v_clientTokenHasBeenSet;

            std::shared_ptr<ClusterConfigForUpdateClusterConfigInput> v_clusterConfig;
            bool v_clusterConfigHasBeenSet;

            bool v_deleteProtectionEnabled;
            bool v_deleteProtectionEnabledHasBeenSet;

            std::string v_description;
            bool v_descriptionHasBeenSet;

            std::string v_id;
            bool v_idHasBeenSet;

            std::shared_ptr<LoggingConfigForUpdateClusterConfigInput> v_loggingConfig;
            bool v_loggingConfigHasBeenSet;

            std::string v_name;
            bool v_nameHasBeenSet;

            std::shared_ptr<PodsConfigForUpdateClusterConfigInput> v_podsConfig;
            bool v_podsConfigHasBeenSet;

        };
    }
}
#endif // !VOLCENGINE_VKE_UPDATECLUSTERCONFIGREQUEST_H