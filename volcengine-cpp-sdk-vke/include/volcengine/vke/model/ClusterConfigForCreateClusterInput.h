/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#ifndef VOLCENGINE_VKE_CLUSTERCONFIGFORCREATECLUSTERINPUT_H
#define VOLCENGINE_VKE_CLUSTERCONFIGFORCREATECLUSTERINPUT_H
#include <string>
#include "volcengine/core/utils/json.hpp"
#include <volcengine/core/RequestBuilder.h>
#include "volcengine/vke/model/ApiServerPublicAccessConfigForCreateClusterInput.h"
using namespace nlohmann;

namespace volcengine{
    namespace vke{
        class ClusterConfigForCreateClusterInput {
        public:
            ClusterConfigForCreateClusterInput();
            ~ClusterConfigForCreateClusterInput() = default;

            static RequestBuilder withRequestBuilder(RequestBuilder rb, const std::string &chain);
            json jsonPayload() const;

            const std::shared_ptr<ApiServerPublicAccessConfigForCreateClusterInput> &getApiServerPublicAccessConfig()const { return  v_apiServerPublicAccessConfig; }
            bool ApiServerPublicAccessConfigHasBeenSet() const { return v_apiServerPublicAccessConfigHasBeenSet; }
            void setApiServerPublicAccessConfig(const std::shared_ptr<ApiServerPublicAccessConfigForCreateClusterInput> &s_apiServerPublicAccessConfig ) {
                v_apiServerPublicAccessConfig = s_apiServerPublicAccessConfig;
                v_apiServerPublicAccessConfigHasBeenSet = true;
            }
            bool isApiServerPublicAccessEnabled()const { return  v_apiServerPublicAccessEnabled; }
            bool ApiServerPublicAccessEnabledHasBeenSet() const { return v_apiServerPublicAccessEnabledHasBeenSet; }
            void setApiServerPublicAccessEnabled(const bool s_apiServerPublicAccessEnabled ) {
                v_apiServerPublicAccessEnabled = s_apiServerPublicAccessEnabled;
                v_apiServerPublicAccessEnabledHasBeenSet = true;
            }
            bool isResourcePublicAccessDefaultEnabled()const { return  v_resourcePublicAccessDefaultEnabled; }
            bool ResourcePublicAccessDefaultEnabledHasBeenSet() const { return v_resourcePublicAccessDefaultEnabledHasBeenSet; }
            void setResourcePublicAccessDefaultEnabled(const bool s_resourcePublicAccessDefaultEnabled ) {
                v_resourcePublicAccessDefaultEnabled = s_resourcePublicAccessDefaultEnabled;
                v_resourcePublicAccessDefaultEnabledHasBeenSet = true;
            }
            const std::vector<std::string> &getSubnetIds()const { return  v_subnetIds; }
            bool SubnetIdsHasBeenSet() const { return v_subnetIdsHasBeenSet; }
            void setSubnetIds(const std::vector<std::string> &s_subnetIds ) {
                v_subnetIds = s_subnetIds;
                v_subnetIdsHasBeenSet = true;
            }
        private:
            std::shared_ptr<ApiServerPublicAccessConfigForCreateClusterInput> v_apiServerPublicAccessConfig;
            bool v_apiServerPublicAccessConfigHasBeenSet;

            bool v_apiServerPublicAccessEnabled;
            bool v_apiServerPublicAccessEnabledHasBeenSet;

            bool v_resourcePublicAccessDefaultEnabled;
            bool v_resourcePublicAccessDefaultEnabledHasBeenSet;

            std::vector<std::string> v_subnetIds;
            bool v_subnetIdsHasBeenSet;

        };
    }
}
#endif // !VOLCENGINE_VKE_CLUSTERCONFIGFORCREATECLUSTERINPUT_H