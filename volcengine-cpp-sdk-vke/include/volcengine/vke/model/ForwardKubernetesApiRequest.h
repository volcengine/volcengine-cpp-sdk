/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#ifndef VOLCENGINE_VKE_FORWARDKUBERNETESAPIREQUEST_H
#define VOLCENGINE_VKE_FORWARDKUBERNETESAPIREQUEST_H
#include <string>
#include "volcengine/core/utils/json.hpp"
#include <volcengine/core/RequestBuilder.h>
#include "volcengine/vke/model/HeaderForForwardKubernetesApiInput.h"
using namespace nlohmann;

namespace volcengine{
    namespace vke{
        class ForwardKubernetesApiRequest {
        public:
            ForwardKubernetesApiRequest();
            ~ForwardKubernetesApiRequest() = default;

            static RequestBuilder withRequestBuilder(RequestBuilder rb, const std::string &chain);
            json jsonPayload() const;

            const std::string &getBody()const { return  v_body; }
            bool BodyHasBeenSet() const { return v_bodyHasBeenSet; }
            void setBody(const std::string &s_body ) {
                v_body = s_body;
                v_bodyHasBeenSet = true;
            }
            const std::string &getClusterId()const { return  v_clusterId; }
            bool ClusterIdHasBeenSet() const { return v_clusterIdHasBeenSet; }
            void setClusterId(const std::string &s_clusterId ) {
                v_clusterId = s_clusterId;
                v_clusterIdHasBeenSet = true;
            }
            const std::vector<HeaderForForwardKubernetesApiInput> &getHeaders()const { return  v_headers; }
            bool HeadersHasBeenSet() const { return v_headersHasBeenSet; }
            void setHeaders(const std::vector<HeaderForForwardKubernetesApiInput> &s_headers ) {
                v_headers = s_headers;
                v_headersHasBeenSet = true;
            }
            const std::string &getMethod()const { return  v_method; }
            bool MethodHasBeenSet() const { return v_methodHasBeenSet; }
            void setMethod(const std::string &s_method ) {
                v_method = s_method;
                v_methodHasBeenSet = true;
            }
            const std::string &getPath()const { return  v_path; }
            bool PathHasBeenSet() const { return v_pathHasBeenSet; }
            void setPath(const std::string &s_path ) {
                v_path = s_path;
                v_pathHasBeenSet = true;
            }
        private:
            std::string v_body;
            bool v_bodyHasBeenSet;

            std::string v_clusterId;
            bool v_clusterIdHasBeenSet;

            std::vector<HeaderForForwardKubernetesApiInput> v_headers;
            bool v_headersHasBeenSet;

            std::string v_method;
            bool v_methodHasBeenSet;

            std::string v_path;
            bool v_pathHasBeenSet;

        };
    }
}
#endif // !VOLCENGINE_VKE_FORWARDKUBERNETESAPIREQUEST_H