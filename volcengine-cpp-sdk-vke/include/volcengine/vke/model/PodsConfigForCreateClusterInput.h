/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#ifndef VOLCENGINE_VKE_PODSCONFIGFORCREATECLUSTERINPUT_H
#define VOLCENGINE_VKE_PODSCONFIGFORCREATECLUSTERINPUT_H
#include <string>
#include "volcengine/core/utils/json.hpp"
#include <volcengine/core/RequestBuilder.h>
#include "volcengine/vke/model/FlannelConfigForCreateClusterInput.h"
#include "volcengine/vke/model/VpcCniConfigForCreateClusterInput.h"
using namespace nlohmann;

namespace volcengine{
    namespace vke{
        class PodsConfigForCreateClusterInput {
        public:
            PodsConfigForCreateClusterInput();
            ~PodsConfigForCreateClusterInput() = default;

            static RequestBuilder withRequestBuilder(RequestBuilder rb, const std::string &chain);
            json jsonPayload() const;

            const std::shared_ptr<FlannelConfigForCreateClusterInput> &getFlannelConfig()const { return  v_flannelConfig; }
            bool FlannelConfigHasBeenSet() const { return v_flannelConfigHasBeenSet; }
            void setFlannelConfig(const std::shared_ptr<FlannelConfigForCreateClusterInput> &s_flannelConfig ) {
                v_flannelConfig = s_flannelConfig;
                v_flannelConfigHasBeenSet = true;
            }
            const std::string &getPodNetworkMode()const { return  v_podNetworkMode; }
            bool PodNetworkModeHasBeenSet() const { return v_podNetworkModeHasBeenSet; }
            void setPodNetworkMode(const std::string &s_podNetworkMode ) {
                v_podNetworkMode = s_podNetworkMode;
                v_podNetworkModeHasBeenSet = true;
            }
            const std::shared_ptr<VpcCniConfigForCreateClusterInput> &getVpcCniConfig()const { return  v_vpcCniConfig; }
            bool VpcCniConfigHasBeenSet() const { return v_vpcCniConfigHasBeenSet; }
            void setVpcCniConfig(const std::shared_ptr<VpcCniConfigForCreateClusterInput> &s_vpcCniConfig ) {
                v_vpcCniConfig = s_vpcCniConfig;
                v_vpcCniConfigHasBeenSet = true;
            }
        private:
            std::shared_ptr<FlannelConfigForCreateClusterInput> v_flannelConfig;
            bool v_flannelConfigHasBeenSet;

            std::string v_podNetworkMode;
            bool v_podNetworkModeHasBeenSet;

            std::shared_ptr<VpcCniConfigForCreateClusterInput> v_vpcCniConfig;
            bool v_vpcCniConfigHasBeenSet;

        };
    }
}
#endif // !VOLCENGINE_VKE_PODSCONFIGFORCREATECLUSTERINPUT_H