/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#include "volcengine/vke/model/ItemForListAddonsOutput.h"

using namespace volcengine;
using namespace volcengine::vke;
using namespace nlohmann;

void ItemForListAddonsOutput::fromJsonString(const std::string &input) {
    auto j = json::parse(input);
    if (j.contains("ClusterId")) j.at("ClusterId").get_to(v_clusterId);
    if (j.contains("Config")) j.at("Config").get_to(v_config);
    if (j.contains("CreateClientToken")) j.at("CreateClientToken").get_to(v_createClientToken);
    if (j.contains("CreateTime")) j.at("CreateTime").get_to(v_createTime);
    if (j.contains("DeployMode")) j.at("DeployMode").get_to(v_deployMode);
    if (j.contains("DeployNodeType")) j.at("DeployNodeType").get_to(v_deployNodeType);
    if (j.contains("Name")) j.at("Name").get_to(v_name);
    if (j.contains("Status")){
        json statusPres = j.at("Status");
        auto next = std::make_shared<StatusForListAddonsOutput>();
        next->fromJsonString(to_string(statusPres));
        v_status = next;
    }
    if (j.contains("UpdateClientToken")) j.at("UpdateClientToken").get_to(v_updateClientToken);
    if (j.contains("UpdateTime")) j.at("UpdateTime").get_to(v_updateTime);
    if (j.contains("Version")) j.at("Version").get_to(v_version);
}
