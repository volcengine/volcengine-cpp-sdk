/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#include "volcengine/ecs/model/DeploymentSetForDescribeDeploymentSetsOutput.h"

using namespace volcengine;
using namespace volcengine::ecs;
using namespace nlohmann;

void DeploymentSetForDescribeDeploymentSetsOutput::fromJsonString(const std::string &input) {
    auto j = json::parse(input);
    if (j.contains("Capacities")){
        json capacitiesPres = j.at("Capacities");
        for (auto & pre : capacitiesPres) {
           CapacityForDescribeDeploymentSetsOutput next;
           next.fromJsonString(to_string(pre));
           v_capacities.emplace_back(next);
        }
    }
    if (j.contains("CreatedAt")) j.at("CreatedAt").get_to(v_createdAt);
    if (j.contains("DeploymentSetDescription")) j.at("DeploymentSetDescription").get_to(v_deploymentSetDescription);
    if (j.contains("DeploymentSetId")) j.at("DeploymentSetId").get_to(v_deploymentSetId);
    if (j.contains("DeploymentSetName")) j.at("DeploymentSetName").get_to(v_deploymentSetName);
    if (j.contains("Granularity")) j.at("Granularity").get_to(v_granularity);
    if (j.contains("InstanceAmount")) j.at("InstanceAmount").get_to(v_instanceAmount);
    if (j.contains("InstanceIds")){
        json instanceIdsPres = j.at("InstanceIds");
        for (auto & pre : instanceIdsPres) {
           v_instanceIds.emplace_back(pre);
        }
    }
    if (j.contains("Strategy")) j.at("Strategy").get_to(v_strategy);
}
