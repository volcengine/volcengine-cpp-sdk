/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#ifndef VOLCENGINE_ECS_NETWORKINTERFACEFORDESCRIBEINSTANCESOUTPUT_H
#define VOLCENGINE_ECS_NETWORKINTERFACEFORDESCRIBEINSTANCESOUTPUT_H
#include <string>
#include <volcengine/core/RequestBuilder.h>
#include "volcengine/core/utils/json.hpp"
namespace volcengine{
    namespace ecs{
        class NetworkInterfaceForDescribeInstancesOutput {
        public:
            NetworkInterfaceForDescribeInstancesOutput() = default;
            ~NetworkInterfaceForDescribeInstancesOutput() = default;
            void fromJsonString(const std::string &input);
            const std::string &getMacAddress() const { return  v_macAddress; }
            void setMacAddress(const std::string &s_macAddress ) {
                v_macAddress = s_macAddress;
            }
            const std::string &getNetworkInterfaceId() const { return  v_networkInterfaceId; }
            void setNetworkInterfaceId(const std::string &s_networkInterfaceId ) {
                v_networkInterfaceId = s_networkInterfaceId;
            }
            const std::string &getPrimaryIpAddress() const { return  v_primaryIpAddress; }
            void setPrimaryIpAddress(const std::string &s_primaryIpAddress ) {
                v_primaryIpAddress = s_primaryIpAddress;
            }
            const std::string &getSubnetId() const { return  v_subnetId; }
            void setSubnetId(const std::string &s_subnetId ) {
                v_subnetId = s_subnetId;
            }
            const std::string &getType() const { return  v_type; }
            void setType(const std::string &s_type ) {
                v_type = s_type;
            }
            const std::string &getVpcId() const { return  v_vpcId; }
            void setVpcId(const std::string &s_vpcId ) {
                v_vpcId = s_vpcId;
            }
        private:
            std::string v_macAddress;
            std::string v_networkInterfaceId;
            std::string v_primaryIpAddress;
            std::string v_subnetId;
            std::string v_type;
            std::string v_vpcId;
        };
    }
}
#endif // !VOLCENGINE_ECS_NETWORKINTERFACEFORDESCRIBEINSTANCESOUTPUT_H