/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#ifndef VOLCENGINE_ECS_STOPINSTANCESREQUEST_H
#define VOLCENGINE_ECS_STOPINSTANCESREQUEST_H
#include <string>
#include <volcengine/core/RequestBuilder.h>

namespace volcengine{
    namespace ecs{
        class StopInstancesRequest {
        public:
            StopInstancesRequest();
            ~StopInstancesRequest() = default;

            RequestBuilder withRequestBuilder(RequestBuilder rb, const std::string &chain)const;

            const std::string &getClientToken()const { return  v_clientToken; }
            bool ClientTokenHasBeenSet() const { return v_clientTokenHasBeenSet; }
            void setClientToken(const std::string &s_clientToken ) {
                v_clientToken = s_clientToken;
                v_clientTokenHasBeenSet = true;
            }
            bool isForceStop()const { return  v_forceStop; }
            bool ForceStopHasBeenSet() const { return v_forceStopHasBeenSet; }
            void setForceStop(const bool s_forceStop ) {
                v_forceStop = s_forceStop;
                v_forceStopHasBeenSet = true;
            }
            const std::vector<std::string> &getInstanceIds()const { return  v_instanceIds; }
            bool InstanceIdsHasBeenSet() const { return v_instanceIdsHasBeenSet; }
            void setInstanceIds(const std::vector<std::string> &s_instanceIds ) {
                v_instanceIds = s_instanceIds;
                v_instanceIdsHasBeenSet = true;
            }
            const std::string &getStoppedMode()const { return  v_stoppedMode; }
            bool StoppedModeHasBeenSet() const { return v_stoppedModeHasBeenSet; }
            void setStoppedMode(const std::string &s_stoppedMode ) {
                v_stoppedMode = s_stoppedMode;
                v_stoppedModeHasBeenSet = true;
            }
        private:
            std::string v_clientToken;
            bool v_clientTokenHasBeenSet;

            bool v_forceStop;
            bool v_forceStopHasBeenSet;

            std::vector<std::string> v_instanceIds;
            bool v_instanceIdsHasBeenSet;

            std::string v_stoppedMode;
            bool v_stoppedModeHasBeenSet;

        };
    }
}
#endif // !VOLCENGINE_ECS_STOPINSTANCESREQUEST_H