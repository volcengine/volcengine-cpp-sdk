/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#ifndef VOLCENGINE_ECS_UPDATESYSTEMEVENTSREQUEST_H
#define VOLCENGINE_ECS_UPDATESYSTEMEVENTSREQUEST_H
#include <string>
#include <volcengine/core/RequestBuilder.h>

namespace volcengine{
    namespace ecs{
        class UpdateSystemEventsRequest {
        public:
            UpdateSystemEventsRequest();
            ~UpdateSystemEventsRequest() = default;

            RequestBuilder withRequestBuilder(RequestBuilder rb, const std::string &chain)const;

            const std::vector<std::string> &getEventIds()const { return  v_eventIds; }
            bool EventIdsHasBeenSet() const { return v_eventIdsHasBeenSet; }
            void setEventIds(const std::vector<std::string> &s_eventIds ) {
                v_eventIds = s_eventIds;
                v_eventIdsHasBeenSet = true;
            }
            const std::string &getOperatedEndAt()const { return  v_operatedEndAt; }
            bool OperatedEndAtHasBeenSet() const { return v_operatedEndAtHasBeenSet; }
            void setOperatedEndAt(const std::string &s_operatedEndAt ) {
                v_operatedEndAt = s_operatedEndAt;
                v_operatedEndAtHasBeenSet = true;
            }
            const std::string &getOperatedStartAt()const { return  v_operatedStartAt; }
            bool OperatedStartAtHasBeenSet() const { return v_operatedStartAtHasBeenSet; }
            void setOperatedStartAt(const std::string &s_operatedStartAt ) {
                v_operatedStartAt = s_operatedStartAt;
                v_operatedStartAtHasBeenSet = true;
            }
            const std::string &getStatus()const { return  v_status; }
            bool StatusHasBeenSet() const { return v_statusHasBeenSet; }
            void setStatus(const std::string &s_status ) {
                v_status = s_status;
                v_statusHasBeenSet = true;
            }
            const std::string &getUpdatedAt()const { return  v_updatedAt; }
            bool UpdatedAtHasBeenSet() const { return v_updatedAtHasBeenSet; }
            void setUpdatedAt(const std::string &s_updatedAt ) {
                v_updatedAt = s_updatedAt;
                v_updatedAtHasBeenSet = true;
            }
        private:
            std::vector<std::string> v_eventIds;
            bool v_eventIdsHasBeenSet;

            std::string v_operatedEndAt;
            bool v_operatedEndAtHasBeenSet;

            std::string v_operatedStartAt;
            bool v_operatedStartAtHasBeenSet;

            std::string v_status;
            bool v_statusHasBeenSet;

            std::string v_updatedAt;
            bool v_updatedAtHasBeenSet;

        };
    }
}
#endif // !VOLCENGINE_ECS_UPDATESYSTEMEVENTSREQUEST_H