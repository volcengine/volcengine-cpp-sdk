/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#ifndef VOLCENGINE_ECS_EVENTTYPEFORDESCRIBEEVENTTYPESOUTPUT_H
#define VOLCENGINE_ECS_EVENTTYPEFORDESCRIBEEVENTTYPESOUTPUT_H
#include <string>
#include <volcengine/core/RequestBuilder.h>
#include "volcengine/core/utils/json.hpp"
namespace volcengine{
    namespace ecs{
        class EventTypeForDescribeEventTypesOutput {
        public:
            EventTypeForDescribeEventTypesOutput() = default;
            ~EventTypeForDescribeEventTypesOutput() = default;
            void fromJsonString(const std::string &input);
            const std::string &getKind() const { return  v_kind; }
            void setKind(const std::string &s_kind ) {
                v_kind = s_kind;
            }
            const bool isResponseRequired() const { return  v_responseRequired; }
            void setResponseRequired(const bool s_responseRequired ) {
                v_responseRequired = s_responseRequired;
            }
            const std::vector<std::string> &getStatus() const { return  v_status; }
            void setStatus(const std::vector<std::string> &s_status ) {
                v_status = s_status;
            }
            const std::string &getTitle() const { return  v_title; }
            void setTitle(const std::string &s_title ) {
                v_title = s_title;
            }
            const std::string &getType() const { return  v_type; }
            void setType(const std::string &s_type ) {
                v_type = s_type;
            }
        private:
            std::string v_kind;
            bool v_responseRequired{};
            std::vector<std::string> v_status;
            std::string v_title;
            std::string v_type;
        };
    }
}
#endif // !VOLCENGINE_ECS_EVENTTYPEFORDESCRIBEEVENTTYPESOUTPUT_H