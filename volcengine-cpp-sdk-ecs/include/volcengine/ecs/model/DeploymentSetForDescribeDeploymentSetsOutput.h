/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#ifndef VOLCENGINE_ECS_DEPLOYMENTSETFORDESCRIBEDEPLOYMENTSETSOUTPUT_H
#define VOLCENGINE_ECS_DEPLOYMENTSETFORDESCRIBEDEPLOYMENTSETSOUTPUT_H
#include <string>
#include <volcengine/core/RequestBuilder.h>
#include "volcengine/core/utils/json.hpp"
#include "volcengine/ecs/model/CapacityForDescribeDeploymentSetsOutput.h"
namespace volcengine{
    namespace ecs{
        class DeploymentSetForDescribeDeploymentSetsOutput {
        public:
            DeploymentSetForDescribeDeploymentSetsOutput() = default;
            ~DeploymentSetForDescribeDeploymentSetsOutput() = default;
            void fromJsonString(const std::string &input);
            const std::vector<CapacityForDescribeDeploymentSetsOutput> &getCapacities() const { return  v_capacities; }
            void setCapacities(const std::vector<CapacityForDescribeDeploymentSetsOutput> &s_capacities ) {
                v_capacities = s_capacities;
            }
            const std::string &getCreatedAt() const { return  v_createdAt; }
            void setCreatedAt(const std::string &s_createdAt ) {
                v_createdAt = s_createdAt;
            }
            const std::string &getDeploymentSetDescription() const { return  v_deploymentSetDescription; }
            void setDeploymentSetDescription(const std::string &s_deploymentSetDescription ) {
                v_deploymentSetDescription = s_deploymentSetDescription;
            }
            const std::string &getDeploymentSetId() const { return  v_deploymentSetId; }
            void setDeploymentSetId(const std::string &s_deploymentSetId ) {
                v_deploymentSetId = s_deploymentSetId;
            }
            const std::string &getDeploymentSetName() const { return  v_deploymentSetName; }
            void setDeploymentSetName(const std::string &s_deploymentSetName ) {
                v_deploymentSetName = s_deploymentSetName;
            }
            const std::string &getGranularity() const { return  v_granularity; }
            void setGranularity(const std::string &s_granularity ) {
                v_granularity = s_granularity;
            }
            const int getInstanceAmount() const { return  v_instanceAmount; }
            void setInstanceAmount(const int s_instanceAmount ) {
                v_instanceAmount = s_instanceAmount;
            }
            const std::vector<std::string> &getInstanceIds() const { return  v_instanceIds; }
            void setInstanceIds(const std::vector<std::string> &s_instanceIds ) {
                v_instanceIds = s_instanceIds;
            }
            const std::string &getStrategy() const { return  v_strategy; }
            void setStrategy(const std::string &s_strategy ) {
                v_strategy = s_strategy;
            }
        private:
            std::vector<CapacityForDescribeDeploymentSetsOutput> v_capacities;
            std::string v_createdAt;
            std::string v_deploymentSetDescription;
            std::string v_deploymentSetId;
            std::string v_deploymentSetName;
            std::string v_granularity;
            int v_instanceAmount{};
            std::vector<std::string> v_instanceIds;
            std::string v_strategy;
        };
    }
}
#endif // !VOLCENGINE_ECS_DEPLOYMENTSETFORDESCRIBEDEPLOYMENTSETSOUTPUT_H