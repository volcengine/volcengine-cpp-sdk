/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#ifndef VOLCENGINE_ECS_ATTACHKEYPAIRREQUEST_H
#define VOLCENGINE_ECS_ATTACHKEYPAIRREQUEST_H
#include <string>
#include <volcengine/core/RequestBuilder.h>

namespace volcengine{
    namespace ecs{
        class AttachKeyPairRequest {
        public:
            AttachKeyPairRequest();
            ~AttachKeyPairRequest() = default;

            RequestBuilder withRequestBuilder(RequestBuilder rb, const std::string &chain)const;

            const std::string &getClientToken()const { return  v_clientToken; }
            bool ClientTokenHasBeenSet() const { return v_clientTokenHasBeenSet; }
            void setClientToken(const std::string &s_clientToken ) {
                v_clientToken = s_clientToken;
                v_clientTokenHasBeenSet = true;
            }
            const std::vector<std::string> &getInstanceIds()const { return  v_instanceIds; }
            bool InstanceIdsHasBeenSet() const { return v_instanceIdsHasBeenSet; }
            void setInstanceIds(const std::vector<std::string> &s_instanceIds ) {
                v_instanceIds = s_instanceIds;
                v_instanceIdsHasBeenSet = true;
            }
            const std::string &getKeyPairId()const { return  v_keyPairId; }
            bool KeyPairIdHasBeenSet() const { return v_keyPairIdHasBeenSet; }
            void setKeyPairId(const std::string &s_keyPairId ) {
                v_keyPairId = s_keyPairId;
                v_keyPairIdHasBeenSet = true;
            }
            const std::string &getKeyPairName()const { return  v_keyPairName; }
            bool KeyPairNameHasBeenSet() const { return v_keyPairNameHasBeenSet; }
            void setKeyPairName(const std::string &s_keyPairName ) {
                v_keyPairName = s_keyPairName;
                v_keyPairNameHasBeenSet = true;
            }
        private:
            std::string v_clientToken;
            bool v_clientTokenHasBeenSet;

            std::vector<std::string> v_instanceIds;
            bool v_instanceIdsHasBeenSet;

            std::string v_keyPairId;
            bool v_keyPairIdHasBeenSet;

            std::string v_keyPairName;
            bool v_keyPairNameHasBeenSet;

        };
    }
}
#endif // !VOLCENGINE_ECS_ATTACHKEYPAIRREQUEST_H