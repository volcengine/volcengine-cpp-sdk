/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#ifndef VOLCENGINE_ECS_DESCRIBEAVAILABLERESOURCEREQUEST_H
#define VOLCENGINE_ECS_DESCRIBEAVAILABLERESOURCEREQUEST_H
#include <string>
#include <volcengine/core/RequestBuilder.h>

namespace volcengine{
    namespace ecs{
        class DescribeAvailableResourceRequest {
        public:
            DescribeAvailableResourceRequest();
            ~DescribeAvailableResourceRequest() = default;

            RequestBuilder withRequestBuilder(RequestBuilder rb, const std::string &chain)const;

            const std::string &getDestinationResource()const { return  v_destinationResource; }
            bool DestinationResourceHasBeenSet() const { return v_destinationResourceHasBeenSet; }
            void setDestinationResource(const std::string &s_destinationResource ) {
                v_destinationResource = s_destinationResource;
                v_destinationResourceHasBeenSet = true;
            }
            const std::string &getInstanceChargeType()const { return  v_instanceChargeType; }
            bool InstanceChargeTypeHasBeenSet() const { return v_instanceChargeTypeHasBeenSet; }
            void setInstanceChargeType(const std::string &s_instanceChargeType ) {
                v_instanceChargeType = s_instanceChargeType;
                v_instanceChargeTypeHasBeenSet = true;
            }
            const std::string &getInstanceType()const { return  v_instanceType; }
            bool InstanceTypeHasBeenSet() const { return v_instanceTypeHasBeenSet; }
            void setInstanceType(const std::string &s_instanceType ) {
                v_instanceType = s_instanceType;
                v_instanceTypeHasBeenSet = true;
            }
            const std::string &getInstanceTypeId()const { return  v_instanceTypeId; }
            bool InstanceTypeIdHasBeenSet() const { return v_instanceTypeIdHasBeenSet; }
            void setInstanceTypeId(const std::string &s_instanceTypeId ) {
                v_instanceTypeId = s_instanceTypeId;
                v_instanceTypeIdHasBeenSet = true;
            }
            const std::string &getSpotStrategy()const { return  v_spotStrategy; }
            bool SpotStrategyHasBeenSet() const { return v_spotStrategyHasBeenSet; }
            void setSpotStrategy(const std::string &s_spotStrategy ) {
                v_spotStrategy = s_spotStrategy;
                v_spotStrategyHasBeenSet = true;
            }
            const std::string &getZoneId()const { return  v_zoneId; }
            bool ZoneIdHasBeenSet() const { return v_zoneIdHasBeenSet; }
            void setZoneId(const std::string &s_zoneId ) {
                v_zoneId = s_zoneId;
                v_zoneIdHasBeenSet = true;
            }
        private:
            std::string v_destinationResource;
            bool v_destinationResourceHasBeenSet;

            std::string v_instanceChargeType;
            bool v_instanceChargeTypeHasBeenSet;

            std::string v_instanceType;
            bool v_instanceTypeHasBeenSet;

            std::string v_instanceTypeId;
            bool v_instanceTypeIdHasBeenSet;

            std::string v_spotStrategy;
            bool v_spotStrategyHasBeenSet;

            std::string v_zoneId;
            bool v_zoneIdHasBeenSet;

        };
    }
}
#endif // !VOLCENGINE_ECS_DESCRIBEAVAILABLERESOURCEREQUEST_H