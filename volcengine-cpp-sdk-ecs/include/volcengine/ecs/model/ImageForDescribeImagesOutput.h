/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#ifndef VOLCENGINE_ECS_IMAGEFORDESCRIBEIMAGESOUTPUT_H
#define VOLCENGINE_ECS_IMAGEFORDESCRIBEIMAGESOUTPUT_H
#include <string>
#include <volcengine/core/RequestBuilder.h>
#include "volcengine/core/utils/json.hpp"
#include "volcengine/ecs/model/TagForDescribeImagesOutput.h"
namespace volcengine{
    namespace ecs{
        class ImageForDescribeImagesOutput {
        public:
            ImageForDescribeImagesOutput() = default;
            ~ImageForDescribeImagesOutput() = default;
            void fromJsonString(const std::string &input);
            const std::string &getArchitecture() const { return  v_architecture; }
            void setArchitecture(const std::string &s_architecture ) {
                v_architecture = s_architecture;
            }
            const std::string &getBootMode() const { return  v_bootMode; }
            void setBootMode(const std::string &s_bootMode ) {
                v_bootMode = s_bootMode;
            }
            const std::string &getCreatedAt() const { return  v_createdAt; }
            void setCreatedAt(const std::string &s_createdAt ) {
                v_createdAt = s_createdAt;
            }
            const std::string &getDescription() const { return  v_description; }
            void setDescription(const std::string &s_description ) {
                v_description = s_description;
            }
            const std::string &getImageId() const { return  v_imageId; }
            void setImageId(const std::string &s_imageId ) {
                v_imageId = s_imageId;
            }
            const std::string &getImageName() const { return  v_imageName; }
            void setImageName(const std::string &s_imageName ) {
                v_imageName = s_imageName;
            }
            const std::string &getImageOwnerId() const { return  v_imageOwnerId; }
            void setImageOwnerId(const std::string &s_imageOwnerId ) {
                v_imageOwnerId = s_imageOwnerId;
            }
            const bool isIsSupportCloudInit() const { return  v_isSupportCloudInit; }
            void setIsSupportCloudInit(const bool s_isSupportCloudInit ) {
                v_isSupportCloudInit = s_isSupportCloudInit;
            }
            const std::string &getOsName() const { return  v_osName; }
            void setOsName(const std::string &s_osName ) {
                v_osName = s_osName;
            }
            const std::string &getOsType() const { return  v_osType; }
            void setOsType(const std::string &s_osType ) {
                v_osType = s_osType;
            }
            const std::string &getPlatform() const { return  v_platform; }
            void setPlatform(const std::string &s_platform ) {
                v_platform = s_platform;
            }
            const std::string &getPlatformVersion() const { return  v_platformVersion; }
            void setPlatformVersion(const std::string &s_platformVersion ) {
                v_platformVersion = s_platformVersion;
            }
            const std::string &getProjectName() const { return  v_projectName; }
            void setProjectName(const std::string &s_projectName ) {
                v_projectName = s_projectName;
            }
            const std::string &getShareStatus() const { return  v_shareStatus; }
            void setShareStatus(const std::string &s_shareStatus ) {
                v_shareStatus = s_shareStatus;
            }
            const int getSize() const { return  v_size; }
            void setSize(const int s_size ) {
                v_size = s_size;
            }
            const std::string &getStatus() const { return  v_status; }
            void setStatus(const std::string &s_status ) {
                v_status = s_status;
            }
            const std::vector<TagForDescribeImagesOutput> &getTags() const { return  v_tags; }
            void setTags(const std::vector<TagForDescribeImagesOutput> &s_tags ) {
                v_tags = s_tags;
            }
            const std::string &getUpdatedAt() const { return  v_updatedAt; }
            void setUpdatedAt(const std::string &s_updatedAt ) {
                v_updatedAt = s_updatedAt;
            }
            const std::string &getVirtualSize() const { return  v_virtualSize; }
            void setVirtualSize(const std::string &s_virtualSize ) {
                v_virtualSize = s_virtualSize;
            }
            const std::string &getVisibility() const { return  v_visibility; }
            void setVisibility(const std::string &s_visibility ) {
                v_visibility = s_visibility;
            }
        private:
            std::string v_architecture;
            std::string v_bootMode;
            std::string v_createdAt;
            std::string v_description;
            std::string v_imageId;
            std::string v_imageName;
            std::string v_imageOwnerId;
            bool v_isSupportCloudInit{};
            std::string v_osName;
            std::string v_osType;
            std::string v_platform;
            std::string v_platformVersion;
            std::string v_projectName;
            std::string v_shareStatus;
            int v_size{};
            std::string v_status;
            std::vector<TagForDescribeImagesOutput> v_tags;
            std::string v_updatedAt;
            std::string v_virtualSize;
            std::string v_visibility;
        };
    }
}
#endif // !VOLCENGINE_ECS_IMAGEFORDESCRIBEIMAGESOUTPUT_H