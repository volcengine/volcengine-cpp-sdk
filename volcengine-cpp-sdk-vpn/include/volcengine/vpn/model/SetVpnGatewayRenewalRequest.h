/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#ifndef VOLCENGINE_VPN_SETVPNGATEWAYRENEWALREQUEST_H
#define VOLCENGINE_VPN_SETVPNGATEWAYRENEWALREQUEST_H
#include <string>
#include <volcengine/core/RequestBuilder.h>

namespace volcengine{
    namespace vpn{
        class SetVpnGatewayRenewalRequest {
        public:
            SetVpnGatewayRenewalRequest();
            ~SetVpnGatewayRenewalRequest() = default;

            RequestBuilder withRequestBuilder(RequestBuilder rb, const std::string &chain)const;

            int getRemainRenewTimes()const { return  v_remainRenewTimes; }
            bool RemainRenewTimesHasBeenSet() const { return v_remainRenewTimesHasBeenSet; }
            void setRemainRenewTimes(const int s_remainRenewTimes ) {
                v_remainRenewTimes = s_remainRenewTimes;
                v_remainRenewTimesHasBeenSet = true;
            }
            int getRenewPeriod()const { return  v_renewPeriod; }
            bool RenewPeriodHasBeenSet() const { return v_renewPeriodHasBeenSet; }
            void setRenewPeriod(const int s_renewPeriod ) {
                v_renewPeriod = s_renewPeriod;
                v_renewPeriodHasBeenSet = true;
            }
            int getRenewType()const { return  v_renewType; }
            bool RenewTypeHasBeenSet() const { return v_renewTypeHasBeenSet; }
            void setRenewType(const int s_renewType ) {
                v_renewType = s_renewType;
                v_renewTypeHasBeenSet = true;
            }
            const std::string &getVpnGatewayId()const { return  v_vpnGatewayId; }
            bool VpnGatewayIdHasBeenSet() const { return v_vpnGatewayIdHasBeenSet; }
            void setVpnGatewayId(const std::string &s_vpnGatewayId ) {
                v_vpnGatewayId = s_vpnGatewayId;
                v_vpnGatewayIdHasBeenSet = true;
            }
        private:
            int v_remainRenewTimes;
            bool v_remainRenewTimesHasBeenSet;

            int v_renewPeriod;
            bool v_renewPeriodHasBeenSet;

            int v_renewType;
            bool v_renewTypeHasBeenSet;

            std::string v_vpnGatewayId;
            bool v_vpnGatewayIdHasBeenSet;

        };
    }
}
#endif // !VOLCENGINE_VPN_SETVPNGATEWAYRENEWALREQUEST_H