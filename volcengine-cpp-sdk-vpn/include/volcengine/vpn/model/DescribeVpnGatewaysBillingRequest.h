/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#ifndef VOLCENGINE_VPN_DESCRIBEVPNGATEWAYSBILLINGREQUEST_H
#define VOLCENGINE_VPN_DESCRIBEVPNGATEWAYSBILLINGREQUEST_H
#include <string>
#include <volcengine/core/RequestBuilder.h>

namespace volcengine{
    namespace vpn{
        class DescribeVpnGatewaysBillingRequest {
        public:
            DescribeVpnGatewaysBillingRequest();
            ~DescribeVpnGatewaysBillingRequest() = default;

            RequestBuilder withRequestBuilder(RequestBuilder rb, const std::string &chain)const;

            int getPageNumber()const { return  v_pageNumber; }
            bool PageNumberHasBeenSet() const { return v_pageNumberHasBeenSet; }
            void setPageNumber(const int s_pageNumber ) {
                v_pageNumber = s_pageNumber;
                v_pageNumberHasBeenSet = true;
            }
            int getPageSize()const { return  v_pageSize; }
            bool PageSizeHasBeenSet() const { return v_pageSizeHasBeenSet; }
            void setPageSize(const int s_pageSize ) {
                v_pageSize = s_pageSize;
                v_pageSizeHasBeenSet = true;
            }
            const std::vector<std::string> &getVpnGatewayIds()const { return  v_vpnGatewayIds; }
            bool VpnGatewayIdsHasBeenSet() const { return v_vpnGatewayIdsHasBeenSet; }
            void setVpnGatewayIds(const std::vector<std::string> &s_vpnGatewayIds ) {
                v_vpnGatewayIds = s_vpnGatewayIds;
                v_vpnGatewayIdsHasBeenSet = true;
            }
        private:
            int v_pageNumber;
            bool v_pageNumberHasBeenSet;

            int v_pageSize;
            bool v_pageSizeHasBeenSet;

            std::vector<std::string> v_vpnGatewayIds;
            bool v_vpnGatewayIdsHasBeenSet;

        };
    }
}
#endif // !VOLCENGINE_VPN_DESCRIBEVPNGATEWAYSBILLINGREQUEST_H