/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#ifndef VOLCENGINE_VPN_DESCRIBECUSTOMERGATEWAYATTRIBUTESRESULT_H
#define VOLCENGINE_VPN_DESCRIBECUSTOMERGATEWAYATTRIBUTESRESULT_H
#include <string>
#include <volcengine/core/RequestBuilder.h>
#include "volcengine/core/utils/json.hpp"
namespace volcengine{
    namespace vpn{
        class DescribeCustomerGatewayAttributesResult {
        public:
            DescribeCustomerGatewayAttributesResult() = default;
            ~DescribeCustomerGatewayAttributesResult() = default;
            void fromJsonString(const std::string &input);
            const std::string &getAccountId() const { return  v_accountId; }
            void setAccountId(const std::string &s_accountId ) {
                v_accountId = s_accountId;
            }
            const int getConnectionCount() const { return  v_connectionCount; }
            void setConnectionCount(const int s_connectionCount ) {
                v_connectionCount = s_connectionCount;
            }
            const std::string &getCreationTime() const { return  v_creationTime; }
            void setCreationTime(const std::string &s_creationTime ) {
                v_creationTime = s_creationTime;
            }
            const std::string &getCustomerGatewayId() const { return  v_customerGatewayId; }
            void setCustomerGatewayId(const std::string &s_customerGatewayId ) {
                v_customerGatewayId = s_customerGatewayId;
            }
            const std::string &getCustomerGatewayName() const { return  v_customerGatewayName; }
            void setCustomerGatewayName(const std::string &s_customerGatewayName ) {
                v_customerGatewayName = s_customerGatewayName;
            }
            const std::string &getDescription() const { return  v_description; }
            void setDescription(const std::string &s_description ) {
                v_description = s_description;
            }
            const std::string &getIpAddress() const { return  v_ipAddress; }
            void setIpAddress(const std::string &s_ipAddress ) {
                v_ipAddress = s_ipAddress;
            }
            const std::string &getProjectName() const { return  v_projectName; }
            void setProjectName(const std::string &s_projectName ) {
                v_projectName = s_projectName;
            }
            const std::string &getRequestId() const { return  v_requestId; }
            void setRequestId(const std::string &s_requestId ) {
                v_requestId = s_requestId;
            }
            const std::string &getStatus() const { return  v_status; }
            void setStatus(const std::string &s_status ) {
                v_status = s_status;
            }
            const std::string &getUpdateTime() const { return  v_updateTime; }
            void setUpdateTime(const std::string &s_updateTime ) {
                v_updateTime = s_updateTime;
            }
        private:
            std::string v_accountId;
            int v_connectionCount{};
            std::string v_creationTime;
            std::string v_customerGatewayId;
            std::string v_customerGatewayName;
            std::string v_description;
            std::string v_ipAddress;
            std::string v_projectName;
            std::string v_requestId;
            std::string v_status;
            std::string v_updateTime;
        };
    }
}
#endif // !VOLCENGINE_VPN_DESCRIBECUSTOMERGATEWAYATTRIBUTESRESULT_H