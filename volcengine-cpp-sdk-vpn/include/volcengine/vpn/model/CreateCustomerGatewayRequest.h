/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#ifndef VOLCENGINE_VPN_CREATECUSTOMERGATEWAYREQUEST_H
#define VOLCENGINE_VPN_CREATECUSTOMERGATEWAYREQUEST_H
#include <string>
#include <volcengine/core/RequestBuilder.h>

namespace volcengine{
    namespace vpn{
        class CreateCustomerGatewayRequest {
        public:
            CreateCustomerGatewayRequest();
            ~CreateCustomerGatewayRequest() = default;

            RequestBuilder withRequestBuilder(RequestBuilder rb, const std::string &chain)const;

            const std::string &getClientToken()const { return  v_clientToken; }
            bool ClientTokenHasBeenSet() const { return v_clientTokenHasBeenSet; }
            void setClientToken(const std::string &s_clientToken ) {
                v_clientToken = s_clientToken;
                v_clientTokenHasBeenSet = true;
            }
            const std::string &getCustomerGatewayName()const { return  v_customerGatewayName; }
            bool CustomerGatewayNameHasBeenSet() const { return v_customerGatewayNameHasBeenSet; }
            void setCustomerGatewayName(const std::string &s_customerGatewayName ) {
                v_customerGatewayName = s_customerGatewayName;
                v_customerGatewayNameHasBeenSet = true;
            }
            const std::string &getDescription()const { return  v_description; }
            bool DescriptionHasBeenSet() const { return v_descriptionHasBeenSet; }
            void setDescription(const std::string &s_description ) {
                v_description = s_description;
                v_descriptionHasBeenSet = true;
            }
            const std::string &getIpAddress()const { return  v_ipAddress; }
            bool IpAddressHasBeenSet() const { return v_ipAddressHasBeenSet; }
            void setIpAddress(const std::string &s_ipAddress ) {
                v_ipAddress = s_ipAddress;
                v_ipAddressHasBeenSet = true;
            }
            const std::string &getProjectName()const { return  v_projectName; }
            bool ProjectNameHasBeenSet() const { return v_projectNameHasBeenSet; }
            void setProjectName(const std::string &s_projectName ) {
                v_projectName = s_projectName;
                v_projectNameHasBeenSet = true;
            }
        private:
            std::string v_clientToken;
            bool v_clientTokenHasBeenSet;

            std::string v_customerGatewayName;
            bool v_customerGatewayNameHasBeenSet;

            std::string v_description;
            bool v_descriptionHasBeenSet;

            std::string v_ipAddress;
            bool v_ipAddressHasBeenSet;

            std::string v_projectName;
            bool v_projectNameHasBeenSet;

        };
    }
}
#endif // !VOLCENGINE_VPN_CREATECUSTOMERGATEWAYREQUEST_H