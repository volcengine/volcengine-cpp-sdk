/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#ifndef VOLCENGINE_CLB_EIPBILLINGCONFIGFORCREATELOADBALANCERINPUT_H
#define VOLCENGINE_CLB_EIPBILLINGCONFIGFORCREATELOADBALANCERINPUT_H
#include <string>
#include <volcengine/core/RequestBuilder.h>

namespace volcengine{
    namespace clb{
        class EipBillingConfigForCreateLoadBalancerInput {
        public:
            EipBillingConfigForCreateLoadBalancerInput();
            ~EipBillingConfigForCreateLoadBalancerInput() = default;

            RequestBuilder withRequestBuilder(RequestBuilder rb, const std::string &chain)const;

            int getBandwidth()const { return  v_bandwidth; }
            bool BandwidthHasBeenSet() const { return v_bandwidthHasBeenSet; }
            void setBandwidth(const int s_bandwidth ) {
                v_bandwidth = s_bandwidth;
                v_bandwidthHasBeenSet = true;
            }
            const std::string &getBandwidthPackageId()const { return  v_bandwidthPackageId; }
            bool BandwidthPackageIdHasBeenSet() const { return v_bandwidthPackageIdHasBeenSet; }
            void setBandwidthPackageId(const std::string &s_bandwidthPackageId ) {
                v_bandwidthPackageId = s_bandwidthPackageId;
                v_bandwidthPackageIdHasBeenSet = true;
            }
            int getEipBillingType()const { return  v_eipBillingType; }
            bool EipBillingTypeHasBeenSet() const { return v_eipBillingTypeHasBeenSet; }
            void setEipBillingType(const int s_eipBillingType ) {
                v_eipBillingType = s_eipBillingType;
                v_eipBillingTypeHasBeenSet = true;
            }
            const std::string &getISP()const { return  v_iSP; }
            bool ISPHasBeenSet() const { return v_iSPHasBeenSet; }
            void setISP(const std::string &s_iSP ) {
                v_iSP = s_iSP;
                v_iSPHasBeenSet = true;
            }
            const std::vector<std::string> &getSecurityProtectionTypes()const { return  v_securityProtectionTypes; }
            bool SecurityProtectionTypesHasBeenSet() const { return v_securityProtectionTypesHasBeenSet; }
            void setSecurityProtectionTypes(const std::vector<std::string> &s_securityProtectionTypes ) {
                v_securityProtectionTypes = s_securityProtectionTypes;
                v_securityProtectionTypesHasBeenSet = true;
            }
        private:
            int v_bandwidth;
            bool v_bandwidthHasBeenSet;

            std::string v_bandwidthPackageId;
            bool v_bandwidthPackageIdHasBeenSet;

            int v_eipBillingType;
            bool v_eipBillingTypeHasBeenSet;

            std::string v_iSP;
            bool v_iSPHasBeenSet;

            std::vector<std::string> v_securityProtectionTypes;
            bool v_securityProtectionTypesHasBeenSet;

        };
    }
}
#endif // !VOLCENGINE_CLB_EIPBILLINGCONFIGFORCREATELOADBALANCERINPUT_H