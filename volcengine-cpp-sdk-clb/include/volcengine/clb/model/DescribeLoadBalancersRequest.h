/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#ifndef VOLCENGINE_CLB_DESCRIBELOADBALANCERSREQUEST_H
#define VOLCENGINE_CLB_DESCRIBELOADBALANCERSREQUEST_H
#include <string>
#include <volcengine/core/RequestBuilder.h>
#include "volcengine/clb/model/TagFilterForDescribeLoadBalancersInput.h"

namespace volcengine{
    namespace clb{
        class DescribeLoadBalancersRequest {
        public:
            DescribeLoadBalancersRequest();
            ~DescribeLoadBalancersRequest() = default;

            RequestBuilder withRequestBuilder(RequestBuilder rb, const std::string &chain)const;

            const std::string &getAddressIpVersion()const { return  v_addressIpVersion; }
            bool AddressIpVersionHasBeenSet() const { return v_addressIpVersionHasBeenSet; }
            void setAddressIpVersion(const std::string &s_addressIpVersion ) {
                v_addressIpVersion = s_addressIpVersion;
                v_addressIpVersionHasBeenSet = true;
            }
            const std::string &getEniAddress()const { return  v_eniAddress; }
            bool EniAddressHasBeenSet() const { return v_eniAddressHasBeenSet; }
            void setEniAddress(const std::string &s_eniAddress ) {
                v_eniAddress = s_eniAddress;
                v_eniAddressHasBeenSet = true;
            }
            const std::vector<std::string> &getLoadBalancerIds()const { return  v_loadBalancerIds; }
            bool LoadBalancerIdsHasBeenSet() const { return v_loadBalancerIdsHasBeenSet; }
            void setLoadBalancerIds(const std::vector<std::string> &s_loadBalancerIds ) {
                v_loadBalancerIds = s_loadBalancerIds;
                v_loadBalancerIdsHasBeenSet = true;
            }
            const std::string &getLoadBalancerName()const { return  v_loadBalancerName; }
            bool LoadBalancerNameHasBeenSet() const { return v_loadBalancerNameHasBeenSet; }
            void setLoadBalancerName(const std::string &s_loadBalancerName ) {
                v_loadBalancerName = s_loadBalancerName;
                v_loadBalancerNameHasBeenSet = true;
            }
            int getPageNumber()const { return  v_pageNumber; }
            bool PageNumberHasBeenSet() const { return v_pageNumberHasBeenSet; }
            void setPageNumber(const int s_pageNumber ) {
                v_pageNumber = s_pageNumber;
                v_pageNumberHasBeenSet = true;
            }
            int getPageSize()const { return  v_pageSize; }
            bool PageSizeHasBeenSet() const { return v_pageSizeHasBeenSet; }
            void setPageSize(const int s_pageSize ) {
                v_pageSize = s_pageSize;
                v_pageSizeHasBeenSet = true;
            }
            const std::string &getProjectName()const { return  v_projectName; }
            bool ProjectNameHasBeenSet() const { return v_projectNameHasBeenSet; }
            void setProjectName(const std::string &s_projectName ) {
                v_projectName = s_projectName;
                v_projectNameHasBeenSet = true;
            }
            const std::vector<TagFilterForDescribeLoadBalancersInput> &getTagFilters()const { return  v_tagFilters; }
            bool TagFiltersHasBeenSet() const { return v_tagFiltersHasBeenSet; }
            void setTagFilters(const std::vector<TagFilterForDescribeLoadBalancersInput> &s_tagFilters ) {
                v_tagFilters = s_tagFilters;
                v_tagFiltersHasBeenSet = true;
            }
            const std::string &getVpcId()const { return  v_vpcId; }
            bool VpcIdHasBeenSet() const { return v_vpcIdHasBeenSet; }
            void setVpcId(const std::string &s_vpcId ) {
                v_vpcId = s_vpcId;
                v_vpcIdHasBeenSet = true;
            }
        private:
            std::string v_addressIpVersion;
            bool v_addressIpVersionHasBeenSet;

            std::string v_eniAddress;
            bool v_eniAddressHasBeenSet;

            std::vector<std::string> v_loadBalancerIds;
            bool v_loadBalancerIdsHasBeenSet;

            std::string v_loadBalancerName;
            bool v_loadBalancerNameHasBeenSet;

            int v_pageNumber;
            bool v_pageNumberHasBeenSet;

            int v_pageSize;
            bool v_pageSizeHasBeenSet;

            std::string v_projectName;
            bool v_projectNameHasBeenSet;

            std::vector<TagFilterForDescribeLoadBalancersInput> v_tagFilters;
            bool v_tagFiltersHasBeenSet;

            std::string v_vpcId;
            bool v_vpcIdHasBeenSet;

        };
    }
}
#endif // !VOLCENGINE_CLB_DESCRIBELOADBALANCERSREQUEST_H