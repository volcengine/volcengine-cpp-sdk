/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#ifndef VOLCENGINE_CLB_IPV6ADDRESSBANDWIDTHFORDESCRIBELOADBALANCERATTRIBUTESOUTPUT_H
#define VOLCENGINE_CLB_IPV6ADDRESSBANDWIDTHFORDESCRIBELOADBALANCERATTRIBUTESOUTPUT_H
#include <string>
#include <volcengine/core/RequestBuilder.h>
#include "volcengine/core/utils/json.hpp"
namespace volcengine{
    namespace clb{
        class Ipv6AddressBandwidthForDescribeLoadBalancerAttributesOutput {
        public:
            Ipv6AddressBandwidthForDescribeLoadBalancerAttributesOutput() = default;
            ~Ipv6AddressBandwidthForDescribeLoadBalancerAttributesOutput() = default;
            void fromJsonString(const std::string &input);
            const int getBandwidth() const { return  v_bandwidth; }
            void setBandwidth(const int s_bandwidth ) {
                v_bandwidth = s_bandwidth;
            }
            const int getBillingType() const { return  v_billingType; }
            void setBillingType(const int s_billingType ) {
                v_billingType = s_billingType;
            }
            const std::string &getISP() const { return  v_iSP; }
            void setISP(const std::string &s_iSP ) {
                v_iSP = s_iSP;
            }
            const std::string &getNetworkType() const { return  v_networkType; }
            void setNetworkType(const std::string &s_networkType ) {
                v_networkType = s_networkType;
            }
        private:
            int v_bandwidth{};
            int v_billingType{};
            std::string v_iSP;
            std::string v_networkType;
        };
    }
}
#endif // !VOLCENGINE_CLB_IPV6ADDRESSBANDWIDTHFORDESCRIBELOADBALANCERATTRIBUTESOUTPUT_H