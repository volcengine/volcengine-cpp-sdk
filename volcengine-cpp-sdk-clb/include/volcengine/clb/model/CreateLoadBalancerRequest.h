/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#ifndef VOLCENGINE_CLB_CREATELOADBALANCERREQUEST_H
#define VOLCENGINE_CLB_CREATELOADBALANCERREQUEST_H
#include <string>
#include <volcengine/core/RequestBuilder.h>
#include "volcengine/clb/model/EipBillingConfigForCreateLoadBalancerInput.h"
#include "volcengine/clb/model/TagForCreateLoadBalancerInput.h"

namespace volcengine{
    namespace clb{
        class CreateLoadBalancerRequest {
        public:
            CreateLoadBalancerRequest();
            ~CreateLoadBalancerRequest() = default;

            RequestBuilder withRequestBuilder(RequestBuilder rb, const std::string &chain)const;

            const std::string &getAddressIpVersion()const { return  v_addressIpVersion; }
            bool AddressIpVersionHasBeenSet() const { return v_addressIpVersionHasBeenSet; }
            void setAddressIpVersion(const std::string &s_addressIpVersion ) {
                v_addressIpVersion = s_addressIpVersion;
                v_addressIpVersionHasBeenSet = true;
            }
            const std::string &getClientToken()const { return  v_clientToken; }
            bool ClientTokenHasBeenSet() const { return v_clientTokenHasBeenSet; }
            void setClientToken(const std::string &s_clientToken ) {
                v_clientToken = s_clientToken;
                v_clientTokenHasBeenSet = true;
            }
            const std::string &getDescription()const { return  v_description; }
            bool DescriptionHasBeenSet() const { return v_descriptionHasBeenSet; }
            void setDescription(const std::string &s_description ) {
                v_description = s_description;
                v_descriptionHasBeenSet = true;
            }
            const std::shared_ptr<EipBillingConfigForCreateLoadBalancerInput> &getEipBillingConfig()const { return  v_eipBillingConfig; }
            bool EipBillingConfigHasBeenSet() const { return v_eipBillingConfigHasBeenSet; }
            void setEipBillingConfig(const std::shared_ptr<EipBillingConfigForCreateLoadBalancerInput> &s_eipBillingConfig ) {
                v_eipBillingConfig = s_eipBillingConfig;
                v_eipBillingConfigHasBeenSet = true;
            }
            const std::string &getEniAddress()const { return  v_eniAddress; }
            bool EniAddressHasBeenSet() const { return v_eniAddressHasBeenSet; }
            void setEniAddress(const std::string &s_eniAddress ) {
                v_eniAddress = s_eniAddress;
                v_eniAddressHasBeenSet = true;
            }
            const std::string &getEniIpv6Address()const { return  v_eniIpv6Address; }
            bool EniIpv6AddressHasBeenSet() const { return v_eniIpv6AddressHasBeenSet; }
            void setEniIpv6Address(const std::string &s_eniIpv6Address ) {
                v_eniIpv6Address = s_eniIpv6Address;
                v_eniIpv6AddressHasBeenSet = true;
            }
            int getLoadBalancerBillingType()const { return  v_loadBalancerBillingType; }
            bool LoadBalancerBillingTypeHasBeenSet() const { return v_loadBalancerBillingTypeHasBeenSet; }
            void setLoadBalancerBillingType(const int s_loadBalancerBillingType ) {
                v_loadBalancerBillingType = s_loadBalancerBillingType;
                v_loadBalancerBillingTypeHasBeenSet = true;
            }
            const std::string &getLoadBalancerName()const { return  v_loadBalancerName; }
            bool LoadBalancerNameHasBeenSet() const { return v_loadBalancerNameHasBeenSet; }
            void setLoadBalancerName(const std::string &s_loadBalancerName ) {
                v_loadBalancerName = s_loadBalancerName;
                v_loadBalancerNameHasBeenSet = true;
            }
            const std::string &getLoadBalancerSpec()const { return  v_loadBalancerSpec; }
            bool LoadBalancerSpecHasBeenSet() const { return v_loadBalancerSpecHasBeenSet; }
            void setLoadBalancerSpec(const std::string &s_loadBalancerSpec ) {
                v_loadBalancerSpec = s_loadBalancerSpec;
                v_loadBalancerSpecHasBeenSet = true;
            }
            const std::string &getMasterZoneId()const { return  v_masterZoneId; }
            bool MasterZoneIdHasBeenSet() const { return v_masterZoneIdHasBeenSet; }
            void setMasterZoneId(const std::string &s_masterZoneId ) {
                v_masterZoneId = s_masterZoneId;
                v_masterZoneIdHasBeenSet = true;
            }
            const std::string &getModificationProtectionReason()const { return  v_modificationProtectionReason; }
            bool ModificationProtectionReasonHasBeenSet() const { return v_modificationProtectionReasonHasBeenSet; }
            void setModificationProtectionReason(const std::string &s_modificationProtectionReason ) {
                v_modificationProtectionReason = s_modificationProtectionReason;
                v_modificationProtectionReasonHasBeenSet = true;
            }
            const std::string &getModificationProtectionStatus()const { return  v_modificationProtectionStatus; }
            bool ModificationProtectionStatusHasBeenSet() const { return v_modificationProtectionStatusHasBeenSet; }
            void setModificationProtectionStatus(const std::string &s_modificationProtectionStatus ) {
                v_modificationProtectionStatus = s_modificationProtectionStatus;
                v_modificationProtectionStatusHasBeenSet = true;
            }
            int getPeriod()const { return  v_period; }
            bool PeriodHasBeenSet() const { return v_periodHasBeenSet; }
            void setPeriod(const int s_period ) {
                v_period = s_period;
                v_periodHasBeenSet = true;
            }
            const std::string &getPeriodUnit()const { return  v_periodUnit; }
            bool PeriodUnitHasBeenSet() const { return v_periodUnitHasBeenSet; }
            void setPeriodUnit(const std::string &s_periodUnit ) {
                v_periodUnit = s_periodUnit;
                v_periodUnitHasBeenSet = true;
            }
            const std::string &getProjectName()const { return  v_projectName; }
            bool ProjectNameHasBeenSet() const { return v_projectNameHasBeenSet; }
            void setProjectName(const std::string &s_projectName ) {
                v_projectName = s_projectName;
                v_projectNameHasBeenSet = true;
            }
            const std::string &getRegionId()const { return  v_regionId; }
            bool RegionIdHasBeenSet() const { return v_regionIdHasBeenSet; }
            void setRegionId(const std::string &s_regionId ) {
                v_regionId = s_regionId;
                v_regionIdHasBeenSet = true;
            }
            const std::string &getSlaveZoneId()const { return  v_slaveZoneId; }
            bool SlaveZoneIdHasBeenSet() const { return v_slaveZoneIdHasBeenSet; }
            void setSlaveZoneId(const std::string &s_slaveZoneId ) {
                v_slaveZoneId = s_slaveZoneId;
                v_slaveZoneIdHasBeenSet = true;
            }
            const std::string &getSubnetId()const { return  v_subnetId; }
            bool SubnetIdHasBeenSet() const { return v_subnetIdHasBeenSet; }
            void setSubnetId(const std::string &s_subnetId ) {
                v_subnetId = s_subnetId;
                v_subnetIdHasBeenSet = true;
            }
            const std::vector<TagForCreateLoadBalancerInput> &getTags()const { return  v_tags; }
            bool TagsHasBeenSet() const { return v_tagsHasBeenSet; }
            void setTags(const std::vector<TagForCreateLoadBalancerInput> &s_tags ) {
                v_tags = s_tags;
                v_tagsHasBeenSet = true;
            }
            const std::string &getType()const { return  v_type; }
            bool TypeHasBeenSet() const { return v_typeHasBeenSet; }
            void setType(const std::string &s_type ) {
                v_type = s_type;
                v_typeHasBeenSet = true;
            }
            const std::string &getVpcId()const { return  v_vpcId; }
            bool VpcIdHasBeenSet() const { return v_vpcIdHasBeenSet; }
            void setVpcId(const std::string &s_vpcId ) {
                v_vpcId = s_vpcId;
                v_vpcIdHasBeenSet = true;
            }
        private:
            std::string v_addressIpVersion;
            bool v_addressIpVersionHasBeenSet;

            std::string v_clientToken;
            bool v_clientTokenHasBeenSet;

            std::string v_description;
            bool v_descriptionHasBeenSet;

            std::shared_ptr<EipBillingConfigForCreateLoadBalancerInput> v_eipBillingConfig;
            bool v_eipBillingConfigHasBeenSet;

            std::string v_eniAddress;
            bool v_eniAddressHasBeenSet;

            std::string v_eniIpv6Address;
            bool v_eniIpv6AddressHasBeenSet;

            int v_loadBalancerBillingType;
            bool v_loadBalancerBillingTypeHasBeenSet;

            std::string v_loadBalancerName;
            bool v_loadBalancerNameHasBeenSet;

            std::string v_loadBalancerSpec;
            bool v_loadBalancerSpecHasBeenSet;

            std::string v_masterZoneId;
            bool v_masterZoneIdHasBeenSet;

            std::string v_modificationProtectionReason;
            bool v_modificationProtectionReasonHasBeenSet;

            std::string v_modificationProtectionStatus;
            bool v_modificationProtectionStatusHasBeenSet;

            int v_period;
            bool v_periodHasBeenSet;

            std::string v_periodUnit;
            bool v_periodUnitHasBeenSet;

            std::string v_projectName;
            bool v_projectNameHasBeenSet;

            std::string v_regionId;
            bool v_regionIdHasBeenSet;

            std::string v_slaveZoneId;
            bool v_slaveZoneIdHasBeenSet;

            std::string v_subnetId;
            bool v_subnetIdHasBeenSet;

            std::vector<TagForCreateLoadBalancerInput> v_tags;
            bool v_tagsHasBeenSet;

            std::string v_type;
            bool v_typeHasBeenSet;

            std::string v_vpcId;
            bool v_vpcIdHasBeenSet;

        };
    }
}
#endif // !VOLCENGINE_CLB_CREATELOADBALANCERREQUEST_H