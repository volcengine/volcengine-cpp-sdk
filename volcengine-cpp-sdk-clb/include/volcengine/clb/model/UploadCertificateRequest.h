/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#ifndef VOLCENGINE_CLB_UPLOADCERTIFICATEREQUEST_H
#define VOLCENGINE_CLB_UPLOADCERTIFICATEREQUEST_H
#include <string>
#include <volcengine/core/RequestBuilder.h>
#include "volcengine/clb/model/TagForUploadCertificateInput.h"

namespace volcengine{
    namespace clb{
        class UploadCertificateRequest {
        public:
            UploadCertificateRequest();
            ~UploadCertificateRequest() = default;

            RequestBuilder withRequestBuilder(RequestBuilder rb, const std::string &chain)const;

            const std::string &getCertificateName()const { return  v_certificateName; }
            bool CertificateNameHasBeenSet() const { return v_certificateNameHasBeenSet; }
            void setCertificateName(const std::string &s_certificateName ) {
                v_certificateName = s_certificateName;
                v_certificateNameHasBeenSet = true;
            }
            const std::string &getDescription()const { return  v_description; }
            bool DescriptionHasBeenSet() const { return v_descriptionHasBeenSet; }
            void setDescription(const std::string &s_description ) {
                v_description = s_description;
                v_descriptionHasBeenSet = true;
            }
            const std::string &getPrivateKey()const { return  v_privateKey; }
            bool PrivateKeyHasBeenSet() const { return v_privateKeyHasBeenSet; }
            void setPrivateKey(const std::string &s_privateKey ) {
                v_privateKey = s_privateKey;
                v_privateKeyHasBeenSet = true;
            }
            const std::string &getProjectName()const { return  v_projectName; }
            bool ProjectNameHasBeenSet() const { return v_projectNameHasBeenSet; }
            void setProjectName(const std::string &s_projectName ) {
                v_projectName = s_projectName;
                v_projectNameHasBeenSet = true;
            }
            const std::string &getPublicKey()const { return  v_publicKey; }
            bool PublicKeyHasBeenSet() const { return v_publicKeyHasBeenSet; }
            void setPublicKey(const std::string &s_publicKey ) {
                v_publicKey = s_publicKey;
                v_publicKeyHasBeenSet = true;
            }
            const std::vector<TagForUploadCertificateInput> &getTags()const { return  v_tags; }
            bool TagsHasBeenSet() const { return v_tagsHasBeenSet; }
            void setTags(const std::vector<TagForUploadCertificateInput> &s_tags ) {
                v_tags = s_tags;
                v_tagsHasBeenSet = true;
            }
        private:
            std::string v_certificateName;
            bool v_certificateNameHasBeenSet;

            std::string v_description;
            bool v_descriptionHasBeenSet;

            std::string v_privateKey;
            bool v_privateKeyHasBeenSet;

            std::string v_projectName;
            bool v_projectNameHasBeenSet;

            std::string v_publicKey;
            bool v_publicKeyHasBeenSet;

            std::vector<TagForUploadCertificateInput> v_tags;
            bool v_tagsHasBeenSet;

        };
    }
}
#endif // !VOLCENGINE_CLB_UPLOADCERTIFICATEREQUEST_H