/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#ifndef VOLCENGINE_CLB_EIPFORDESCRIBELOADBALANCERATTRIBUTESOUTPUT_H
#define VOLCENGINE_CLB_EIPFORDESCRIBELOADBALANCERATTRIBUTESOUTPUT_H
#include <string>
#include <volcengine/core/RequestBuilder.h>
#include "volcengine/core/utils/json.hpp"
namespace volcengine{
    namespace clb{
        class EipForDescribeLoadBalancerAttributesOutput {
        public:
            EipForDescribeLoadBalancerAttributesOutput() = default;
            ~EipForDescribeLoadBalancerAttributesOutput() = default;
            void fromJsonString(const std::string &input);
            const int getBandwidth() const { return  v_bandwidth; }
            void setBandwidth(const int s_bandwidth ) {
                v_bandwidth = s_bandwidth;
            }
            const std::string &getBandwidthPackageId() const { return  v_bandwidthPackageId; }
            void setBandwidthPackageId(const std::string &s_bandwidthPackageId ) {
                v_bandwidthPackageId = s_bandwidthPackageId;
            }
            const std::string &getEipAddress() const { return  v_eipAddress; }
            void setEipAddress(const std::string &s_eipAddress ) {
                v_eipAddress = s_eipAddress;
            }
            const int getEipBillingType() const { return  v_eipBillingType; }
            void setEipBillingType(const int s_eipBillingType ) {
                v_eipBillingType = s_eipBillingType;
            }
            const std::string &getISP() const { return  v_iSP; }
            void setISP(const std::string &s_iSP ) {
                v_iSP = s_iSP;
            }
            const std::vector<std::string> &getSecurityProtectionTypes() const { return  v_securityProtectionTypes; }
            void setSecurityProtectionTypes(const std::vector<std::string> &s_securityProtectionTypes ) {
                v_securityProtectionTypes = s_securityProtectionTypes;
            }
        private:
            int v_bandwidth{};
            std::string v_bandwidthPackageId;
            std::string v_eipAddress;
            int v_eipBillingType{};
            std::string v_iSP;
            std::vector<std::string> v_securityProtectionTypes;
        };
    }
}
#endif // !VOLCENGINE_CLB_EIPFORDESCRIBELOADBALANCERATTRIBUTESOUTPUT_H