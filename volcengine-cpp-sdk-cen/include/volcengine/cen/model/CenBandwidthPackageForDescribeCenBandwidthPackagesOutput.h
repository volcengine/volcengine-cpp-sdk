/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#ifndef VOLCENGINE_CEN_CENBANDWIDTHPACKAGEFORDESCRIBECENBANDWIDTHPACKAGESOUTPUT_H
#define VOLCENGINE_CEN_CENBANDWIDTHPACKAGEFORDESCRIBECENBANDWIDTHPACKAGESOUTPUT_H
#include <string>
#include <volcengine/core/RequestBuilder.h>
#include "volcengine/core/utils/json.hpp"
#include "volcengine/cen/model/TagForDescribeCenBandwidthPackagesOutput.h"
namespace volcengine{
    namespace cen{
        class CenBandwidthPackageForDescribeCenBandwidthPackagesOutput {
        public:
            CenBandwidthPackageForDescribeCenBandwidthPackagesOutput() = default;
            ~CenBandwidthPackageForDescribeCenBandwidthPackagesOutput() = default;
            void fromJsonString(const std::string &input);
            const std::string &getAccountId() const { return  v_accountId; }
            void setAccountId(const std::string &s_accountId ) {
                v_accountId = s_accountId;
            }
            const int getBandwidth() const { return  v_bandwidth; }
            void setBandwidth(const int s_bandwidth ) {
                v_bandwidth = s_bandwidth;
            }
            const int getBillingType() const { return  v_billingType; }
            void setBillingType(const int s_billingType ) {
                v_billingType = s_billingType;
            }
            const std::string &getCenBandwidthPackageId() const { return  v_cenBandwidthPackageId; }
            void setCenBandwidthPackageId(const std::string &s_cenBandwidthPackageId ) {
                v_cenBandwidthPackageId = s_cenBandwidthPackageId;
            }
            const std::string &getCenBandwidthPackageName() const { return  v_cenBandwidthPackageName; }
            void setCenBandwidthPackageName(const std::string &s_cenBandwidthPackageName ) {
                v_cenBandwidthPackageName = s_cenBandwidthPackageName;
            }
            const std::vector<std::string> &getCenIds() const { return  v_cenIds; }
            void setCenIds(const std::vector<std::string> &s_cenIds ) {
                v_cenIds = s_cenIds;
            }
            const std::string &getCreationTime() const { return  v_creationTime; }
            void setCreationTime(const std::string &s_creationTime ) {
                v_creationTime = s_creationTime;
            }
            const std::string &getDeletedTime() const { return  v_deletedTime; }
            void setDeletedTime(const std::string &s_deletedTime ) {
                v_deletedTime = s_deletedTime;
            }
            const std::string &getDescription() const { return  v_description; }
            void setDescription(const std::string &s_description ) {
                v_description = s_description;
            }
            const std::string &getExpiredTime() const { return  v_expiredTime; }
            void setExpiredTime(const std::string &s_expiredTime ) {
                v_expiredTime = s_expiredTime;
            }
            const std::string &getLocalGeographicRegionSetId() const { return  v_localGeographicRegionSetId; }
            void setLocalGeographicRegionSetId(const std::string &s_localGeographicRegionSetId ) {
                v_localGeographicRegionSetId = s_localGeographicRegionSetId;
            }
            const std::string &getPeerGeographicRegionSetId() const { return  v_peerGeographicRegionSetId; }
            void setPeerGeographicRegionSetId(const std::string &s_peerGeographicRegionSetId ) {
                v_peerGeographicRegionSetId = s_peerGeographicRegionSetId;
            }
            const std::string &getProjectName() const { return  v_projectName; }
            void setProjectName(const std::string &s_projectName ) {
                v_projectName = s_projectName;
            }
            const int getRemainingBandwidth() const { return  v_remainingBandwidth; }
            void setRemainingBandwidth(const int s_remainingBandwidth ) {
                v_remainingBandwidth = s_remainingBandwidth;
            }
            const std::string &getStatus() const { return  v_status; }
            void setStatus(const std::string &s_status ) {
                v_status = s_status;
            }
            const std::vector<TagForDescribeCenBandwidthPackagesOutput> &getTags() const { return  v_tags; }
            void setTags(const std::vector<TagForDescribeCenBandwidthPackagesOutput> &s_tags ) {
                v_tags = s_tags;
            }
        private:
            std::string v_accountId;
            int v_bandwidth{};
            int v_billingType{};
            std::string v_cenBandwidthPackageId;
            std::string v_cenBandwidthPackageName;
            std::vector<std::string> v_cenIds;
            std::string v_creationTime;
            std::string v_deletedTime;
            std::string v_description;
            std::string v_expiredTime;
            std::string v_localGeographicRegionSetId;
            std::string v_peerGeographicRegionSetId;
            std::string v_projectName;
            int v_remainingBandwidth{};
            std::string v_status;
            std::vector<TagForDescribeCenBandwidthPackagesOutput> v_tags;
        };
    }
}
#endif // !VOLCENGINE_CEN_CENBANDWIDTHPACKAGEFORDESCRIBECENBANDWIDTHPACKAGESOUTPUT_H