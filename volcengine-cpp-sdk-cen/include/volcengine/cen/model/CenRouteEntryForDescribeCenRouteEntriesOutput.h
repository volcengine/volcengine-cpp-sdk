/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#ifndef VOLCENGINE_CEN_CENROUTEENTRYFORDESCRIBECENROUTEENTRIESOUTPUT_H
#define VOLCENGINE_CEN_CENROUTEENTRYFORDESCRIBECENROUTEENTRIESOUTPUT_H
#include <string>
#include <volcengine/core/RequestBuilder.h>
#include "volcengine/core/utils/json.hpp"
namespace volcengine{
    namespace cen{
        class CenRouteEntryForDescribeCenRouteEntriesOutput {
        public:
            CenRouteEntryForDescribeCenRouteEntriesOutput() = default;
            ~CenRouteEntryForDescribeCenRouteEntriesOutput() = default;
            void fromJsonString(const std::string &input);
            const std::vector<std::string> &getAsPath() const { return  v_asPath; }
            void setAsPath(const std::vector<std::string> &s_asPath ) {
                v_asPath = s_asPath;
            }
            const std::string &getCenId() const { return  v_cenId; }
            void setCenId(const std::string &s_cenId ) {
                v_cenId = s_cenId;
            }
            const std::string &getDestinationCidrBlock() const { return  v_destinationCidrBlock; }
            void setDestinationCidrBlock(const std::string &s_destinationCidrBlock ) {
                v_destinationCidrBlock = s_destinationCidrBlock;
            }
            const std::string &getInstanceId() const { return  v_instanceId; }
            void setInstanceId(const std::string &s_instanceId ) {
                v_instanceId = s_instanceId;
            }
            const std::string &getInstanceRegionId() const { return  v_instanceRegionId; }
            void setInstanceRegionId(const std::string &s_instanceRegionId ) {
                v_instanceRegionId = s_instanceRegionId;
            }
            const std::string &getInstanceType() const { return  v_instanceType; }
            void setInstanceType(const std::string &s_instanceType ) {
                v_instanceType = s_instanceType;
            }
            const std::string &getPublishStatus() const { return  v_publishStatus; }
            void setPublishStatus(const std::string &s_publishStatus ) {
                v_publishStatus = s_publishStatus;
            }
            const std::string &getStatus() const { return  v_status; }
            void setStatus(const std::string &s_status ) {
                v_status = s_status;
            }
            const std::string &getType() const { return  v_type; }
            void setType(const std::string &s_type ) {
                v_type = s_type;
            }
        private:
            std::vector<std::string> v_asPath;
            std::string v_cenId;
            std::string v_destinationCidrBlock;
            std::string v_instanceId;
            std::string v_instanceRegionId;
            std::string v_instanceType;
            std::string v_publishStatus;
            std::string v_status;
            std::string v_type;
        };
    }
}
#endif // !VOLCENGINE_CEN_CENROUTEENTRYFORDESCRIBECENROUTEENTRIESOUTPUT_H