/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#ifndef VOLCENGINE_CEN_CREATECENINTERREGIONBANDWIDTHREQUEST_H
#define VOLCENGINE_CEN_CREATECENINTERREGIONBANDWIDTHREQUEST_H
#include <string>
#include <volcengine/core/RequestBuilder.h>

namespace volcengine{
    namespace cen{
        class CreateCenInterRegionBandwidthRequest {
        public:
            CreateCenInterRegionBandwidthRequest();
            ~CreateCenInterRegionBandwidthRequest() = default;

            RequestBuilder withRequestBuilder(RequestBuilder rb, const std::string &chain)const;

            int getBandwidth()const { return  v_bandwidth; }
            bool BandwidthHasBeenSet() const { return v_bandwidthHasBeenSet; }
            void setBandwidth(const int s_bandwidth ) {
                v_bandwidth = s_bandwidth;
                v_bandwidthHasBeenSet = true;
            }
            const std::string &getCenId()const { return  v_cenId; }
            bool CenIdHasBeenSet() const { return v_cenIdHasBeenSet; }
            void setCenId(const std::string &s_cenId ) {
                v_cenId = s_cenId;
                v_cenIdHasBeenSet = true;
            }
            const std::string &getLocalRegionId()const { return  v_localRegionId; }
            bool LocalRegionIdHasBeenSet() const { return v_localRegionIdHasBeenSet; }
            void setLocalRegionId(const std::string &s_localRegionId ) {
                v_localRegionId = s_localRegionId;
                v_localRegionIdHasBeenSet = true;
            }
            const std::string &getPeerRegionId()const { return  v_peerRegionId; }
            bool PeerRegionIdHasBeenSet() const { return v_peerRegionIdHasBeenSet; }
            void setPeerRegionId(const std::string &s_peerRegionId ) {
                v_peerRegionId = s_peerRegionId;
                v_peerRegionIdHasBeenSet = true;
            }
        private:
            int v_bandwidth;
            bool v_bandwidthHasBeenSet;

            std::string v_cenId;
            bool v_cenIdHasBeenSet;

            std::string v_localRegionId;
            bool v_localRegionIdHasBeenSet;

            std::string v_peerRegionId;
            bool v_peerRegionIdHasBeenSet;

        };
    }
}
#endif // !VOLCENGINE_CEN_CREATECENINTERREGIONBANDWIDTHREQUEST_H