/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#ifndef VOLCENGINE_CEN_MODIFYCENBANDWIDTHPACKAGEATTRIBUTESREQUEST_H
#define VOLCENGINE_CEN_MODIFYCENBANDWIDTHPACKAGEATTRIBUTESREQUEST_H
#include <string>
#include <volcengine/core/RequestBuilder.h>

namespace volcengine{
    namespace cen{
        class ModifyCenBandwidthPackageAttributesRequest {
        public:
            ModifyCenBandwidthPackageAttributesRequest();
            ~ModifyCenBandwidthPackageAttributesRequest() = default;

            RequestBuilder withRequestBuilder(RequestBuilder rb, const std::string &chain)const;

            int getBandwidth()const { return  v_bandwidth; }
            bool BandwidthHasBeenSet() const { return v_bandwidthHasBeenSet; }
            void setBandwidth(const int s_bandwidth ) {
                v_bandwidth = s_bandwidth;
                v_bandwidthHasBeenSet = true;
            }
            const std::string &getCenBandwidthPackageId()const { return  v_cenBandwidthPackageId; }
            bool CenBandwidthPackageIdHasBeenSet() const { return v_cenBandwidthPackageIdHasBeenSet; }
            void setCenBandwidthPackageId(const std::string &s_cenBandwidthPackageId ) {
                v_cenBandwidthPackageId = s_cenBandwidthPackageId;
                v_cenBandwidthPackageIdHasBeenSet = true;
            }
            const std::string &getCenBandwidthPackageName()const { return  v_cenBandwidthPackageName; }
            bool CenBandwidthPackageNameHasBeenSet() const { return v_cenBandwidthPackageNameHasBeenSet; }
            void setCenBandwidthPackageName(const std::string &s_cenBandwidthPackageName ) {
                v_cenBandwidthPackageName = s_cenBandwidthPackageName;
                v_cenBandwidthPackageNameHasBeenSet = true;
            }
            const std::string &getDescription()const { return  v_description; }
            bool DescriptionHasBeenSet() const { return v_descriptionHasBeenSet; }
            void setDescription(const std::string &s_description ) {
                v_description = s_description;
                v_descriptionHasBeenSet = true;
            }
        private:
            int v_bandwidth;
            bool v_bandwidthHasBeenSet;

            std::string v_cenBandwidthPackageId;
            bool v_cenBandwidthPackageIdHasBeenSet;

            std::string v_cenBandwidthPackageName;
            bool v_cenBandwidthPackageNameHasBeenSet;

            std::string v_description;
            bool v_descriptionHasBeenSet;

        };
    }
}
#endif // !VOLCENGINE_CEN_MODIFYCENBANDWIDTHPACKAGEATTRIBUTESREQUEST_H