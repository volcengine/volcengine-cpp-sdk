/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#ifndef VOLCENGINE_CEN_INTERREGIONBANDWIDTHFORDESCRIBECENINTERREGIONBANDWIDTHSOUTPUT_H
#define VOLCENGINE_CEN_INTERREGIONBANDWIDTHFORDESCRIBECENINTERREGIONBANDWIDTHSOUTPUT_H
#include <string>
#include <volcengine/core/RequestBuilder.h>
#include "volcengine/core/utils/json.hpp"
namespace volcengine{
    namespace cen{
        class InterRegionBandwidthForDescribeCenInterRegionBandwidthsOutput {
        public:
            InterRegionBandwidthForDescribeCenInterRegionBandwidthsOutput() = default;
            ~InterRegionBandwidthForDescribeCenInterRegionBandwidthsOutput() = default;
            void fromJsonString(const std::string &input);
            const int getBandwidth() const { return  v_bandwidth; }
            void setBandwidth(const int s_bandwidth ) {
                v_bandwidth = s_bandwidth;
            }
            const std::string &getCenBandwidthPackageId() const { return  v_cenBandwidthPackageId; }
            void setCenBandwidthPackageId(const std::string &s_cenBandwidthPackageId ) {
                v_cenBandwidthPackageId = s_cenBandwidthPackageId;
            }
            const std::string &getCenId() const { return  v_cenId; }
            void setCenId(const std::string &s_cenId ) {
                v_cenId = s_cenId;
            }
            const std::string &getCreationTime() const { return  v_creationTime; }
            void setCreationTime(const std::string &s_creationTime ) {
                v_creationTime = s_creationTime;
            }
            const std::string &getInterRegionBandwidthId() const { return  v_interRegionBandwidthId; }
            void setInterRegionBandwidthId(const std::string &s_interRegionBandwidthId ) {
                v_interRegionBandwidthId = s_interRegionBandwidthId;
            }
            const std::string &getLocalRegionId() const { return  v_localRegionId; }
            void setLocalRegionId(const std::string &s_localRegionId ) {
                v_localRegionId = s_localRegionId;
            }
            const std::string &getPeerRegionId() const { return  v_peerRegionId; }
            void setPeerRegionId(const std::string &s_peerRegionId ) {
                v_peerRegionId = s_peerRegionId;
            }
            const std::string &getStatus() const { return  v_status; }
            void setStatus(const std::string &s_status ) {
                v_status = s_status;
            }
            const std::string &getUpdateTime() const { return  v_updateTime; }
            void setUpdateTime(const std::string &s_updateTime ) {
                v_updateTime = s_updateTime;
            }
        private:
            int v_bandwidth{};
            std::string v_cenBandwidthPackageId;
            std::string v_cenId;
            std::string v_creationTime;
            std::string v_interRegionBandwidthId;
            std::string v_localRegionId;
            std::string v_peerRegionId;
            std::string v_status;
            std::string v_updateTime;
        };
    }
}
#endif // !VOLCENGINE_CEN_INTERREGIONBANDWIDTHFORDESCRIBECENINTERREGIONBANDWIDTHSOUTPUT_H