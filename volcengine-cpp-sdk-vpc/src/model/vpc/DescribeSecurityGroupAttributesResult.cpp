/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#include "volcengine/vpc/model/DescribeSecurityGroupAttributesResult.h"

using namespace volcengine;
using namespace volcengine::vpc;
using namespace nlohmann;

void DescribeSecurityGroupAttributesResult::fromJsonString(const std::string &input) {
    auto j = json::parse(input);
    j = j.at("Result");
    if (j.contains("CreationTime")) j.at("CreationTime").get_to(v_creationTime);
    if (j.contains("Description")) j.at("Description").get_to(v_description);
    if (j.contains("Permissions")){
        json permissionsPres = j.at("Permissions");
        for (auto & pre : permissionsPres) {
           PermissionForDescribeSecurityGroupAttributesOutput next;
           next.fromJsonString(to_string(pre));
           v_permissions.emplace_back(next);
        }
    }
    if (j.contains("ProjectName")) j.at("ProjectName").get_to(v_projectName);
    if (j.contains("RequestId")) j.at("RequestId").get_to(v_requestId);
    if (j.contains("SecurityGroupId")) j.at("SecurityGroupId").get_to(v_securityGroupId);
    if (j.contains("SecurityGroupName")) j.at("SecurityGroupName").get_to(v_securityGroupName);
    if (j.contains("ServiceManaged")) j.at("ServiceManaged").get_to(v_serviceManaged);
    if (j.contains("Status")) j.at("Status").get_to(v_status);
    if (j.contains("Tags")){
        json tagsPres = j.at("Tags");
        for (auto & pre : tagsPres) {
           TagForDescribeSecurityGroupAttributesOutput next;
           next.fromJsonString(to_string(pre));
           v_tags.emplace_back(next);
        }
    }
    if (j.contains("Type")) j.at("Type").get_to(v_type);
    if (j.contains("UpdateTime")) j.at("UpdateTime").get_to(v_updateTime);
    if (j.contains("VpcId")) j.at("VpcId").get_to(v_vpcId);
}
