/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#ifndef VOLCENGINE_VPC_INGRESSACLENTRYFORDESCRIBENETWORKACLSOUTPUT_H
#define VOLCENGINE_VPC_INGRESSACLENTRYFORDESCRIBENETWORKACLSOUTPUT_H
#include <string>
#include <volcengine/core/RequestBuilder.h>
#include "volcengine/core/utils/json.hpp"
namespace volcengine{
    namespace vpc{
        class IngressAclEntryForDescribeNetworkAclsOutput {
        public:
            IngressAclEntryForDescribeNetworkAclsOutput() = default;
            ~IngressAclEntryForDescribeNetworkAclsOutput() = default;
            void fromJsonString(const std::string &input);
            const std::string &getDescription() const { return  v_description; }
            void setDescription(const std::string &s_description ) {
                v_description = s_description;
            }
            const std::string &getNetworkAclEntryId() const { return  v_networkAclEntryId; }
            void setNetworkAclEntryId(const std::string &s_networkAclEntryId ) {
                v_networkAclEntryId = s_networkAclEntryId;
            }
            const std::string &getNetworkAclEntryName() const { return  v_networkAclEntryName; }
            void setNetworkAclEntryName(const std::string &s_networkAclEntryName ) {
                v_networkAclEntryName = s_networkAclEntryName;
            }
            const std::string &getPolicy() const { return  v_policy; }
            void setPolicy(const std::string &s_policy ) {
                v_policy = s_policy;
            }
            const std::string &getPort() const { return  v_port; }
            void setPort(const std::string &s_port ) {
                v_port = s_port;
            }
            const int getPriority() const { return  v_priority; }
            void setPriority(const int s_priority ) {
                v_priority = s_priority;
            }
            const std::string &getProtocol() const { return  v_protocol; }
            void setProtocol(const std::string &s_protocol ) {
                v_protocol = s_protocol;
            }
            const std::string &getSourceCidrIp() const { return  v_sourceCidrIp; }
            void setSourceCidrIp(const std::string &s_sourceCidrIp ) {
                v_sourceCidrIp = s_sourceCidrIp;
            }
        private:
            std::string v_description;
            std::string v_networkAclEntryId;
            std::string v_networkAclEntryName;
            std::string v_policy;
            std::string v_port;
            int v_priority{};
            std::string v_protocol;
            std::string v_sourceCidrIp;
        };
    }
}
#endif // !VOLCENGINE_VPC_INGRESSACLENTRYFORDESCRIBENETWORKACLSOUTPUT_H