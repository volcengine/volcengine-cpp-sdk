/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#ifndef VOLCENGINE_VPC_DESCRIBEEIPADDRESSESREQUEST_H
#define VOLCENGINE_VPC_DESCRIBEEIPADDRESSESREQUEST_H
#include <string>
#include <volcengine/core/RequestBuilder.h>
#include "volcengine/vpc/model/TagFilterForDescribeEipAddressesInput.h"

namespace volcengine{
    namespace vpc{
        class DescribeEipAddressesRequest {
        public:
            DescribeEipAddressesRequest();
            ~DescribeEipAddressesRequest() = default;

            RequestBuilder withRequestBuilder(RequestBuilder rb, const std::string &chain)const;

            const std::vector<std::string> &getAllocationIds()const { return  v_allocationIds; }
            bool AllocationIdsHasBeenSet() const { return v_allocationIdsHasBeenSet; }
            void setAllocationIds(const std::vector<std::string> &s_allocationIds ) {
                v_allocationIds = s_allocationIds;
                v_allocationIdsHasBeenSet = true;
            }
            const std::string &getAssociatedInstanceId()const { return  v_associatedInstanceId; }
            bool AssociatedInstanceIdHasBeenSet() const { return v_associatedInstanceIdHasBeenSet; }
            void setAssociatedInstanceId(const std::string &s_associatedInstanceId ) {
                v_associatedInstanceId = s_associatedInstanceId;
                v_associatedInstanceIdHasBeenSet = true;
            }
            const std::string &getAssociatedInstanceType()const { return  v_associatedInstanceType; }
            bool AssociatedInstanceTypeHasBeenSet() const { return v_associatedInstanceTypeHasBeenSet; }
            void setAssociatedInstanceType(const std::string &s_associatedInstanceType ) {
                v_associatedInstanceType = s_associatedInstanceType;
                v_associatedInstanceTypeHasBeenSet = true;
            }
            int getBillingType()const { return  v_billingType; }
            bool BillingTypeHasBeenSet() const { return v_billingTypeHasBeenSet; }
            void setBillingType(const int s_billingType ) {
                v_billingType = s_billingType;
                v_billingTypeHasBeenSet = true;
            }
            const std::vector<std::string> &getEipAddresses()const { return  v_eipAddresses; }
            bool EipAddressesHasBeenSet() const { return v_eipAddressesHasBeenSet; }
            void setEipAddresses(const std::vector<std::string> &s_eipAddresses ) {
                v_eipAddresses = s_eipAddresses;
                v_eipAddressesHasBeenSet = true;
            }
            const std::string &getISP()const { return  v_iSP; }
            bool ISPHasBeenSet() const { return v_iSPHasBeenSet; }
            void setISP(const std::string &s_iSP ) {
                v_iSP = s_iSP;
                v_iSPHasBeenSet = true;
            }
            const std::string &getName()const { return  v_name; }
            bool NameHasBeenSet() const { return v_nameHasBeenSet; }
            void setName(const std::string &s_name ) {
                v_name = s_name;
                v_nameHasBeenSet = true;
            }
            int getPageNumber()const { return  v_pageNumber; }
            bool PageNumberHasBeenSet() const { return v_pageNumberHasBeenSet; }
            void setPageNumber(const int s_pageNumber ) {
                v_pageNumber = s_pageNumber;
                v_pageNumberHasBeenSet = true;
            }
            int getPageSize()const { return  v_pageSize; }
            bool PageSizeHasBeenSet() const { return v_pageSizeHasBeenSet; }
            void setPageSize(const int s_pageSize ) {
                v_pageSize = s_pageSize;
                v_pageSizeHasBeenSet = true;
            }
            const std::string &getProjectName()const { return  v_projectName; }
            bool ProjectNameHasBeenSet() const { return v_projectNameHasBeenSet; }
            void setProjectName(const std::string &s_projectName ) {
                v_projectName = s_projectName;
                v_projectNameHasBeenSet = true;
            }
            bool isSecurityProtectionEnabled()const { return  v_securityProtectionEnabled; }
            bool SecurityProtectionEnabledHasBeenSet() const { return v_securityProtectionEnabledHasBeenSet; }
            void setSecurityProtectionEnabled(const bool s_securityProtectionEnabled ) {
                v_securityProtectionEnabled = s_securityProtectionEnabled;
                v_securityProtectionEnabledHasBeenSet = true;
            }
            const std::string &getStatus()const { return  v_status; }
            bool StatusHasBeenSet() const { return v_statusHasBeenSet; }
            void setStatus(const std::string &s_status ) {
                v_status = s_status;
                v_statusHasBeenSet = true;
            }
            const std::vector<TagFilterForDescribeEipAddressesInput> &getTagFilters()const { return  v_tagFilters; }
            bool TagFiltersHasBeenSet() const { return v_tagFiltersHasBeenSet; }
            void setTagFilters(const std::vector<TagFilterForDescribeEipAddressesInput> &s_tagFilters ) {
                v_tagFilters = s_tagFilters;
                v_tagFiltersHasBeenSet = true;
            }
        private:
            std::vector<std::string> v_allocationIds;
            bool v_allocationIdsHasBeenSet;

            std::string v_associatedInstanceId;
            bool v_associatedInstanceIdHasBeenSet;

            std::string v_associatedInstanceType;
            bool v_associatedInstanceTypeHasBeenSet;

            int v_billingType;
            bool v_billingTypeHasBeenSet;

            std::vector<std::string> v_eipAddresses;
            bool v_eipAddressesHasBeenSet;

            std::string v_iSP;
            bool v_iSPHasBeenSet;

            std::string v_name;
            bool v_nameHasBeenSet;

            int v_pageNumber;
            bool v_pageNumberHasBeenSet;

            int v_pageSize;
            bool v_pageSizeHasBeenSet;

            std::string v_projectName;
            bool v_projectNameHasBeenSet;

            bool v_securityProtectionEnabled;
            bool v_securityProtectionEnabledHasBeenSet;

            std::string v_status;
            bool v_statusHasBeenSet;

            std::vector<TagFilterForDescribeEipAddressesInput> v_tagFilters;
            bool v_tagFiltersHasBeenSet;

        };
    }
}
#endif // !VOLCENGINE_VPC_DESCRIBEEIPADDRESSESREQUEST_H