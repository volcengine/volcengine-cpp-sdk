/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#ifndef VOLCENGINE_VPC_DESCRIBEHAVIPSREQUEST_H
#define VOLCENGINE_VPC_DESCRIBEHAVIPSREQUEST_H
#include <string>
#include <volcengine/core/RequestBuilder.h>

namespace volcengine{
    namespace vpc{
        class DescribeHaVipsRequest {
        public:
            DescribeHaVipsRequest();
            ~DescribeHaVipsRequest() = default;

            RequestBuilder withRequestBuilder(RequestBuilder rb, const std::string &chain)const;

            const std::vector<std::string> &getHaVipIds()const { return  v_haVipIds; }
            bool HaVipIdsHasBeenSet() const { return v_haVipIdsHasBeenSet; }
            void setHaVipIds(const std::vector<std::string> &s_haVipIds ) {
                v_haVipIds = s_haVipIds;
                v_haVipIdsHasBeenSet = true;
            }
            const std::string &getHaVipName()const { return  v_haVipName; }
            bool HaVipNameHasBeenSet() const { return v_haVipNameHasBeenSet; }
            void setHaVipName(const std::string &s_haVipName ) {
                v_haVipName = s_haVipName;
                v_haVipNameHasBeenSet = true;
            }
            const std::string &getIpAddress()const { return  v_ipAddress; }
            bool IpAddressHasBeenSet() const { return v_ipAddressHasBeenSet; }
            void setIpAddress(const std::string &s_ipAddress ) {
                v_ipAddress = s_ipAddress;
                v_ipAddressHasBeenSet = true;
            }
            int getPageNumber()const { return  v_pageNumber; }
            bool PageNumberHasBeenSet() const { return v_pageNumberHasBeenSet; }
            void setPageNumber(const int s_pageNumber ) {
                v_pageNumber = s_pageNumber;
                v_pageNumberHasBeenSet = true;
            }
            int getPageSize()const { return  v_pageSize; }
            bool PageSizeHasBeenSet() const { return v_pageSizeHasBeenSet; }
            void setPageSize(const int s_pageSize ) {
                v_pageSize = s_pageSize;
                v_pageSizeHasBeenSet = true;
            }
            const std::string &getStatus()const { return  v_status; }
            bool StatusHasBeenSet() const { return v_statusHasBeenSet; }
            void setStatus(const std::string &s_status ) {
                v_status = s_status;
                v_statusHasBeenSet = true;
            }
            const std::string &getSubnetId()const { return  v_subnetId; }
            bool SubnetIdHasBeenSet() const { return v_subnetIdHasBeenSet; }
            void setSubnetId(const std::string &s_subnetId ) {
                v_subnetId = s_subnetId;
                v_subnetIdHasBeenSet = true;
            }
            const std::string &getVpcId()const { return  v_vpcId; }
            bool VpcIdHasBeenSet() const { return v_vpcIdHasBeenSet; }
            void setVpcId(const std::string &s_vpcId ) {
                v_vpcId = s_vpcId;
                v_vpcIdHasBeenSet = true;
            }
        private:
            std::vector<std::string> v_haVipIds;
            bool v_haVipIdsHasBeenSet;

            std::string v_haVipName;
            bool v_haVipNameHasBeenSet;

            std::string v_ipAddress;
            bool v_ipAddressHasBeenSet;

            int v_pageNumber;
            bool v_pageNumberHasBeenSet;

            int v_pageSize;
            bool v_pageSizeHasBeenSet;

            std::string v_status;
            bool v_statusHasBeenSet;

            std::string v_subnetId;
            bool v_subnetIdHasBeenSet;

            std::string v_vpcId;
            bool v_vpcIdHasBeenSet;

        };
    }
}
#endif // !VOLCENGINE_VPC_DESCRIBEHAVIPSREQUEST_H