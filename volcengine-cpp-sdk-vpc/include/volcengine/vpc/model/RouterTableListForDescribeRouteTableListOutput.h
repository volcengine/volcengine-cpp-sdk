/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#ifndef VOLCENGINE_VPC_ROUTERTABLELISTFORDESCRIBEROUTETABLELISTOUTPUT_H
#define VOLCENGINE_VPC_ROUTERTABLELISTFORDESCRIBEROUTETABLELISTOUTPUT_H
#include <string>
#include <volcengine/core/RequestBuilder.h>
#include "volcengine/core/utils/json.hpp"
namespace volcengine{
    namespace vpc{
        class RouterTableListForDescribeRouteTableListOutput {
        public:
            RouterTableListForDescribeRouteTableListOutput() = default;
            ~RouterTableListForDescribeRouteTableListOutput() = default;
            void fromJsonString(const std::string &input);
            const std::string &getAccountId() const { return  v_accountId; }
            void setAccountId(const std::string &s_accountId ) {
                v_accountId = s_accountId;
            }
            const std::string &getCreationTime() const { return  v_creationTime; }
            void setCreationTime(const std::string &s_creationTime ) {
                v_creationTime = s_creationTime;
            }
            const std::string &getDescription() const { return  v_description; }
            void setDescription(const std::string &s_description ) {
                v_description = s_description;
            }
            const std::string &getProjectName() const { return  v_projectName; }
            void setProjectName(const std::string &s_projectName ) {
                v_projectName = s_projectName;
            }
            const std::string &getRouteTableId() const { return  v_routeTableId; }
            void setRouteTableId(const std::string &s_routeTableId ) {
                v_routeTableId = s_routeTableId;
            }
            const std::string &getRouteTableName() const { return  v_routeTableName; }
            void setRouteTableName(const std::string &s_routeTableName ) {
                v_routeTableName = s_routeTableName;
            }
            const std::string &getRouteTableType() const { return  v_routeTableType; }
            void setRouteTableType(const std::string &s_routeTableType ) {
                v_routeTableType = s_routeTableType;
            }
            const std::vector<std::string> &getSubnetIds() const { return  v_subnetIds; }
            void setSubnetIds(const std::vector<std::string> &s_subnetIds ) {
                v_subnetIds = s_subnetIds;
            }
            const std::string &getUpdateTime() const { return  v_updateTime; }
            void setUpdateTime(const std::string &s_updateTime ) {
                v_updateTime = s_updateTime;
            }
            const std::string &getVpcId() const { return  v_vpcId; }
            void setVpcId(const std::string &s_vpcId ) {
                v_vpcId = s_vpcId;
            }
            const std::string &getVpcName() const { return  v_vpcName; }
            void setVpcName(const std::string &s_vpcName ) {
                v_vpcName = s_vpcName;
            }
        private:
            std::string v_accountId;
            std::string v_creationTime;
            std::string v_description;
            std::string v_projectName;
            std::string v_routeTableId;
            std::string v_routeTableName;
            std::string v_routeTableType;
            std::vector<std::string> v_subnetIds;
            std::string v_updateTime;
            std::string v_vpcId;
            std::string v_vpcName;
        };
    }
}
#endif // !VOLCENGINE_VPC_ROUTERTABLELISTFORDESCRIBEROUTETABLELISTOUTPUT_H