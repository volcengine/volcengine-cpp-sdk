/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#ifndef VOLCENGINE_VPC_EGRESSACLENTRYFORUPDATENETWORKACLENTRIESINPUT_H
#define VOLCENGINE_VPC_EGRESSACLENTRYFORUPDATENETWORKACLENTRIESINPUT_H
#include <string>
#include <volcengine/core/RequestBuilder.h>

namespace volcengine{
    namespace vpc{
        class EgressAclEntryForUpdateNetworkAclEntriesInput {
        public:
            EgressAclEntryForUpdateNetworkAclEntriesInput();
            ~EgressAclEntryForUpdateNetworkAclEntriesInput() = default;

            RequestBuilder withRequestBuilder(RequestBuilder rb, const std::string &chain)const;

            const std::string &getDescription()const { return  v_description; }
            bool DescriptionHasBeenSet() const { return v_descriptionHasBeenSet; }
            void setDescription(const std::string &s_description ) {
                v_description = s_description;
                v_descriptionHasBeenSet = true;
            }
            const std::string &getDestinationCidrIp()const { return  v_destinationCidrIp; }
            bool DestinationCidrIpHasBeenSet() const { return v_destinationCidrIpHasBeenSet; }
            void setDestinationCidrIp(const std::string &s_destinationCidrIp ) {
                v_destinationCidrIp = s_destinationCidrIp;
                v_destinationCidrIpHasBeenSet = true;
            }
            const std::string &getNetworkAclEntryId()const { return  v_networkAclEntryId; }
            bool NetworkAclEntryIdHasBeenSet() const { return v_networkAclEntryIdHasBeenSet; }
            void setNetworkAclEntryId(const std::string &s_networkAclEntryId ) {
                v_networkAclEntryId = s_networkAclEntryId;
                v_networkAclEntryIdHasBeenSet = true;
            }
            const std::string &getNetworkAclEntryName()const { return  v_networkAclEntryName; }
            bool NetworkAclEntryNameHasBeenSet() const { return v_networkAclEntryNameHasBeenSet; }
            void setNetworkAclEntryName(const std::string &s_networkAclEntryName ) {
                v_networkAclEntryName = s_networkAclEntryName;
                v_networkAclEntryNameHasBeenSet = true;
            }
            const std::string &getPolicy()const { return  v_policy; }
            bool PolicyHasBeenSet() const { return v_policyHasBeenSet; }
            void setPolicy(const std::string &s_policy ) {
                v_policy = s_policy;
                v_policyHasBeenSet = true;
            }
            const std::string &getPort()const { return  v_port; }
            bool PortHasBeenSet() const { return v_portHasBeenSet; }
            void setPort(const std::string &s_port ) {
                v_port = s_port;
                v_portHasBeenSet = true;
            }
            const std::string &getProtocol()const { return  v_protocol; }
            bool ProtocolHasBeenSet() const { return v_protocolHasBeenSet; }
            void setProtocol(const std::string &s_protocol ) {
                v_protocol = s_protocol;
                v_protocolHasBeenSet = true;
            }
        private:
            std::string v_description;
            bool v_descriptionHasBeenSet;

            std::string v_destinationCidrIp;
            bool v_destinationCidrIpHasBeenSet;

            std::string v_networkAclEntryId;
            bool v_networkAclEntryIdHasBeenSet;

            std::string v_networkAclEntryName;
            bool v_networkAclEntryNameHasBeenSet;

            std::string v_policy;
            bool v_policyHasBeenSet;

            std::string v_port;
            bool v_portHasBeenSet;

            std::string v_protocol;
            bool v_protocolHasBeenSet;

        };
    }
}
#endif // !VOLCENGINE_VPC_EGRESSACLENTRYFORUPDATENETWORKACLENTRIESINPUT_H