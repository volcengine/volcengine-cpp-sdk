/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#ifndef VOLCENGINE_VPC_DESCRIBEROUTETABLELISTREQUEST_H
#define VOLCENGINE_VPC_DESCRIBEROUTETABLELISTREQUEST_H
#include <string>
#include <volcengine/core/RequestBuilder.h>

namespace volcengine{
    namespace vpc{
        class DescribeRouteTableListRequest {
        public:
            DescribeRouteTableListRequest();
            ~DescribeRouteTableListRequest() = default;

            RequestBuilder withRequestBuilder(RequestBuilder rb, const std::string &chain)const;

            int getPageNumber()const { return  v_pageNumber; }
            bool PageNumberHasBeenSet() const { return v_pageNumberHasBeenSet; }
            void setPageNumber(const int s_pageNumber ) {
                v_pageNumber = s_pageNumber;
                v_pageNumberHasBeenSet = true;
            }
            int getPageSize()const { return  v_pageSize; }
            bool PageSizeHasBeenSet() const { return v_pageSizeHasBeenSet; }
            void setPageSize(const int s_pageSize ) {
                v_pageSize = s_pageSize;
                v_pageSizeHasBeenSet = true;
            }
            const std::string &getProjectName()const { return  v_projectName; }
            bool ProjectNameHasBeenSet() const { return v_projectNameHasBeenSet; }
            void setProjectName(const std::string &s_projectName ) {
                v_projectName = s_projectName;
                v_projectNameHasBeenSet = true;
            }
            const std::string &getRouteTableId()const { return  v_routeTableId; }
            bool RouteTableIdHasBeenSet() const { return v_routeTableIdHasBeenSet; }
            void setRouteTableId(const std::string &s_routeTableId ) {
                v_routeTableId = s_routeTableId;
                v_routeTableIdHasBeenSet = true;
            }
            const std::string &getRouteTableName()const { return  v_routeTableName; }
            bool RouteTableNameHasBeenSet() const { return v_routeTableNameHasBeenSet; }
            void setRouteTableName(const std::string &s_routeTableName ) {
                v_routeTableName = s_routeTableName;
                v_routeTableNameHasBeenSet = true;
            }
            const std::string &getVpcId()const { return  v_vpcId; }
            bool VpcIdHasBeenSet() const { return v_vpcIdHasBeenSet; }
            void setVpcId(const std::string &s_vpcId ) {
                v_vpcId = s_vpcId;
                v_vpcIdHasBeenSet = true;
            }
        private:
            int v_pageNumber;
            bool v_pageNumberHasBeenSet;

            int v_pageSize;
            bool v_pageSizeHasBeenSet;

            std::string v_projectName;
            bool v_projectNameHasBeenSet;

            std::string v_routeTableId;
            bool v_routeTableIdHasBeenSet;

            std::string v_routeTableName;
            bool v_routeTableNameHasBeenSet;

            std::string v_vpcId;
            bool v_vpcIdHasBeenSet;

        };
    }
}
#endif // !VOLCENGINE_VPC_DESCRIBEROUTETABLELISTREQUEST_H