/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#ifndef VOLCENGINE_VPC_DESCRIBESECURITYGROUPATTRIBUTESRESULT_H
#define VOLCENGINE_VPC_DESCRIBESECURITYGROUPATTRIBUTESRESULT_H
#include <string>
#include <volcengine/core/RequestBuilder.h>
#include "volcengine/core/utils/json.hpp"
#include "volcengine/vpc/model/PermissionForDescribeSecurityGroupAttributesOutput.h"
#include "volcengine/vpc/model/TagForDescribeSecurityGroupAttributesOutput.h"
namespace volcengine{
    namespace vpc{
        class DescribeSecurityGroupAttributesResult {
        public:
            DescribeSecurityGroupAttributesResult() = default;
            ~DescribeSecurityGroupAttributesResult() = default;
            void fromJsonString(const std::string &input);
            const std::string &getCreationTime() const { return  v_creationTime; }
            void setCreationTime(const std::string &s_creationTime ) {
                v_creationTime = s_creationTime;
            }
            const std::string &getDescription() const { return  v_description; }
            void setDescription(const std::string &s_description ) {
                v_description = s_description;
            }
            const std::vector<PermissionForDescribeSecurityGroupAttributesOutput> &getPermissions() const { return  v_permissions; }
            void setPermissions(const std::vector<PermissionForDescribeSecurityGroupAttributesOutput> &s_permissions ) {
                v_permissions = s_permissions;
            }
            const std::string &getProjectName() const { return  v_projectName; }
            void setProjectName(const std::string &s_projectName ) {
                v_projectName = s_projectName;
            }
            const std::string &getRequestId() const { return  v_requestId; }
            void setRequestId(const std::string &s_requestId ) {
                v_requestId = s_requestId;
            }
            const std::string &getSecurityGroupId() const { return  v_securityGroupId; }
            void setSecurityGroupId(const std::string &s_securityGroupId ) {
                v_securityGroupId = s_securityGroupId;
            }
            const std::string &getSecurityGroupName() const { return  v_securityGroupName; }
            void setSecurityGroupName(const std::string &s_securityGroupName ) {
                v_securityGroupName = s_securityGroupName;
            }
            const bool isServiceManaged() const { return  v_serviceManaged; }
            void setServiceManaged(const bool s_serviceManaged ) {
                v_serviceManaged = s_serviceManaged;
            }
            const std::string &getStatus() const { return  v_status; }
            void setStatus(const std::string &s_status ) {
                v_status = s_status;
            }
            const std::vector<TagForDescribeSecurityGroupAttributesOutput> &getTags() const { return  v_tags; }
            void setTags(const std::vector<TagForDescribeSecurityGroupAttributesOutput> &s_tags ) {
                v_tags = s_tags;
            }
            const std::string &getType() const { return  v_type; }
            void setType(const std::string &s_type ) {
                v_type = s_type;
            }
            const std::string &getUpdateTime() const { return  v_updateTime; }
            void setUpdateTime(const std::string &s_updateTime ) {
                v_updateTime = s_updateTime;
            }
            const std::string &getVpcId() const { return  v_vpcId; }
            void setVpcId(const std::string &s_vpcId ) {
                v_vpcId = s_vpcId;
            }
        private:
            std::string v_creationTime;
            std::string v_description;
            std::vector<PermissionForDescribeSecurityGroupAttributesOutput> v_permissions;
            std::string v_projectName;
            std::string v_requestId;
            std::string v_securityGroupId;
            std::string v_securityGroupName;
            bool v_serviceManaged{};
            std::string v_status;
            std::vector<TagForDescribeSecurityGroupAttributesOutput> v_tags;
            std::string v_type;
            std::string v_updateTime;
            std::string v_vpcId;
        };
    }
}
#endif // !VOLCENGINE_VPC_DESCRIBESECURITYGROUPATTRIBUTESRESULT_H