/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#ifndef VOLCENGINE_VPC_PERMISSIONFORDESCRIBESECURITYGROUPATTRIBUTESOUTPUT_H
#define VOLCENGINE_VPC_PERMISSIONFORDESCRIBESECURITYGROUPATTRIBUTESOUTPUT_H
#include <string>
#include <volcengine/core/RequestBuilder.h>
#include "volcengine/core/utils/json.hpp"
namespace volcengine{
    namespace vpc{
        class PermissionForDescribeSecurityGroupAttributesOutput {
        public:
            PermissionForDescribeSecurityGroupAttributesOutput() = default;
            ~PermissionForDescribeSecurityGroupAttributesOutput() = default;
            void fromJsonString(const std::string &input);
            const std::string &getCidrIp() const { return  v_cidrIp; }
            void setCidrIp(const std::string &s_cidrIp ) {
                v_cidrIp = s_cidrIp;
            }
            const std::string &getCreationTime() const { return  v_creationTime; }
            void setCreationTime(const std::string &s_creationTime ) {
                v_creationTime = s_creationTime;
            }
            const std::string &getDescription() const { return  v_description; }
            void setDescription(const std::string &s_description ) {
                v_description = s_description;
            }
            const std::string &getDirection() const { return  v_direction; }
            void setDirection(const std::string &s_direction ) {
                v_direction = s_direction;
            }
            const std::string &getPolicy() const { return  v_policy; }
            void setPolicy(const std::string &s_policy ) {
                v_policy = s_policy;
            }
            const int getPortEnd() const { return  v_portEnd; }
            void setPortEnd(const int s_portEnd ) {
                v_portEnd = s_portEnd;
            }
            const int getPortStart() const { return  v_portStart; }
            void setPortStart(const int s_portStart ) {
                v_portStart = s_portStart;
            }
            const int getPriority() const { return  v_priority; }
            void setPriority(const int s_priority ) {
                v_priority = s_priority;
            }
            const std::string &getProtocol() const { return  v_protocol; }
            void setProtocol(const std::string &s_protocol ) {
                v_protocol = s_protocol;
            }
            const std::string &getSourceGroupId() const { return  v_sourceGroupId; }
            void setSourceGroupId(const std::string &s_sourceGroupId ) {
                v_sourceGroupId = s_sourceGroupId;
            }
            const std::string &getUpdateTime() const { return  v_updateTime; }
            void setUpdateTime(const std::string &s_updateTime ) {
                v_updateTime = s_updateTime;
            }
        private:
            std::string v_cidrIp;
            std::string v_creationTime;
            std::string v_description;
            std::string v_direction;
            std::string v_policy;
            int v_portEnd{};
            int v_portStart{};
            int v_priority{};
            std::string v_protocol;
            std::string v_sourceGroupId;
            std::string v_updateTime;
        };
    }
}
#endif // !VOLCENGINE_VPC_PERMISSIONFORDESCRIBESECURITYGROUPATTRIBUTESOUTPUT_H