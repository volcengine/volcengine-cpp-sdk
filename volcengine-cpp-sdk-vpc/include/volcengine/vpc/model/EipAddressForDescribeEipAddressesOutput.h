/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#ifndef VOLCENGINE_VPC_EIPADDRESSFORDESCRIBEEIPADDRESSESOUTPUT_H
#define VOLCENGINE_VPC_EIPADDRESSFORDESCRIBEEIPADDRESSESOUTPUT_H
#include <string>
#include <volcengine/core/RequestBuilder.h>
#include "volcengine/core/utils/json.hpp"
#include "volcengine/vpc/model/TagForDescribeEipAddressesOutput.h"
namespace volcengine{
    namespace vpc{
        class EipAddressForDescribeEipAddressesOutput {
        public:
            EipAddressForDescribeEipAddressesOutput() = default;
            ~EipAddressForDescribeEipAddressesOutput() = default;
            void fromJsonString(const std::string &input);
            const std::string &getAllocationId() const { return  v_allocationId; }
            void setAllocationId(const std::string &s_allocationId ) {
                v_allocationId = s_allocationId;
            }
            const std::string &getAllocationTime() const { return  v_allocationTime; }
            void setAllocationTime(const std::string &s_allocationTime ) {
                v_allocationTime = s_allocationTime;
            }
            const int getBandwidth() const { return  v_bandwidth; }
            void setBandwidth(const int s_bandwidth ) {
                v_bandwidth = s_bandwidth;
            }
            const std::string &getBandwidthPackageId() const { return  v_bandwidthPackageId; }
            void setBandwidthPackageId(const std::string &s_bandwidthPackageId ) {
                v_bandwidthPackageId = s_bandwidthPackageId;
            }
            const int getBillingType() const { return  v_billingType; }
            void setBillingType(const int s_billingType ) {
                v_billingType = s_billingType;
            }
            const std::string &getBusinessStatus() const { return  v_businessStatus; }
            void setBusinessStatus(const std::string &s_businessStatus ) {
                v_businessStatus = s_businessStatus;
            }
            const std::string &getDeletedTime() const { return  v_deletedTime; }
            void setDeletedTime(const std::string &s_deletedTime ) {
                v_deletedTime = s_deletedTime;
            }
            const std::string &getDescription() const { return  v_description; }
            void setDescription(const std::string &s_description ) {
                v_description = s_description;
            }
            const std::string &getEipAddress() const { return  v_eipAddress; }
            void setEipAddress(const std::string &s_eipAddress ) {
                v_eipAddress = s_eipAddress;
            }
            const std::string &getExpiredTime() const { return  v_expiredTime; }
            void setExpiredTime(const std::string &s_expiredTime ) {
                v_expiredTime = s_expiredTime;
            }
            const std::string &getISP() const { return  v_iSP; }
            void setISP(const std::string &s_iSP ) {
                v_iSP = s_iSP;
            }
            const std::string &getInstanceId() const { return  v_instanceId; }
            void setInstanceId(const std::string &s_instanceId ) {
                v_instanceId = s_instanceId;
            }
            const std::string &getInstanceType() const { return  v_instanceType; }
            void setInstanceType(const std::string &s_instanceType ) {
                v_instanceType = s_instanceType;
            }
            const std::string &getLockReason() const { return  v_lockReason; }
            void setLockReason(const std::string &s_lockReason ) {
                v_lockReason = s_lockReason;
            }
            const std::string &getName() const { return  v_name; }
            void setName(const std::string &s_name ) {
                v_name = s_name;
            }
            const std::string &getOverdueTime() const { return  v_overdueTime; }
            void setOverdueTime(const std::string &s_overdueTime ) {
                v_overdueTime = s_overdueTime;
            }
            const std::string &getProjectName() const { return  v_projectName; }
            void setProjectName(const std::string &s_projectName ) {
                v_projectName = s_projectName;
            }
            const std::vector<std::string> &getSecurityProtectionTypes() const { return  v_securityProtectionTypes; }
            void setSecurityProtectionTypes(const std::vector<std::string> &s_securityProtectionTypes ) {
                v_securityProtectionTypes = s_securityProtectionTypes;
            }
            const std::string &getStatus() const { return  v_status; }
            void setStatus(const std::string &s_status ) {
                v_status = s_status;
            }
            const std::vector<TagForDescribeEipAddressesOutput> &getTags() const { return  v_tags; }
            void setTags(const std::vector<TagForDescribeEipAddressesOutput> &s_tags ) {
                v_tags = s_tags;
            }
            const std::string &getUpdatedAt() const { return  v_updatedAt; }
            void setUpdatedAt(const std::string &s_updatedAt ) {
                v_updatedAt = s_updatedAt;
            }
        private:
            std::string v_allocationId;
            std::string v_allocationTime;
            int v_bandwidth{};
            std::string v_bandwidthPackageId;
            int v_billingType{};
            std::string v_businessStatus;
            std::string v_deletedTime;
            std::string v_description;
            std::string v_eipAddress;
            std::string v_expiredTime;
            std::string v_iSP;
            std::string v_instanceId;
            std::string v_instanceType;
            std::string v_lockReason;
            std::string v_name;
            std::string v_overdueTime;
            std::string v_projectName;
            std::vector<std::string> v_securityProtectionTypes;
            std::string v_status;
            std::vector<TagForDescribeEipAddressesOutput> v_tags;
            std::string v_updatedAt;
        };
    }
}
#endif // !VOLCENGINE_VPC_EIPADDRESSFORDESCRIBEEIPADDRESSESOUTPUT_H