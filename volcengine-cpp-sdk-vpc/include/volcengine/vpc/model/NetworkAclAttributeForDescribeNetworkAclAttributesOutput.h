/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#ifndef VOLCENGINE_VPC_NETWORKACLATTRIBUTEFORDESCRIBENETWORKACLATTRIBUTESOUTPUT_H
#define VOLCENGINE_VPC_NETWORKACLATTRIBUTEFORDESCRIBENETWORKACLATTRIBUTESOUTPUT_H
#include <string>
#include <volcengine/core/RequestBuilder.h>
#include "volcengine/core/utils/json.hpp"
#include "volcengine/vpc/model/EgressAclEntryForDescribeNetworkAclAttributesOutput.h"
#include "volcengine/vpc/model/IngressAclEntryForDescribeNetworkAclAttributesOutput.h"
#include "volcengine/vpc/model/ResourceForDescribeNetworkAclAttributesOutput.h"
namespace volcengine{
    namespace vpc{
        class NetworkAclAttributeForDescribeNetworkAclAttributesOutput {
        public:
            NetworkAclAttributeForDescribeNetworkAclAttributesOutput() = default;
            ~NetworkAclAttributeForDescribeNetworkAclAttributesOutput() = default;
            void fromJsonString(const std::string &input);
            const std::string &getCreationTime() const { return  v_creationTime; }
            void setCreationTime(const std::string &s_creationTime ) {
                v_creationTime = s_creationTime;
            }
            const std::string &getDescription() const { return  v_description; }
            void setDescription(const std::string &s_description ) {
                v_description = s_description;
            }
            const std::vector<EgressAclEntryForDescribeNetworkAclAttributesOutput> &getEgressAclEntries() const { return  v_egressAclEntries; }
            void setEgressAclEntries(const std::vector<EgressAclEntryForDescribeNetworkAclAttributesOutput> &s_egressAclEntries ) {
                v_egressAclEntries = s_egressAclEntries;
            }
            const std::vector<IngressAclEntryForDescribeNetworkAclAttributesOutput> &getIngressAclEntries() const { return  v_ingressAclEntries; }
            void setIngressAclEntries(const std::vector<IngressAclEntryForDescribeNetworkAclAttributesOutput> &s_ingressAclEntries ) {
                v_ingressAclEntries = s_ingressAclEntries;
            }
            const std::string &getNetworkAclId() const { return  v_networkAclId; }
            void setNetworkAclId(const std::string &s_networkAclId ) {
                v_networkAclId = s_networkAclId;
            }
            const std::string &getNetworkAclName() const { return  v_networkAclName; }
            void setNetworkAclName(const std::string &s_networkAclName ) {
                v_networkAclName = s_networkAclName;
            }
            const std::string &getProjectName() const { return  v_projectName; }
            void setProjectName(const std::string &s_projectName ) {
                v_projectName = s_projectName;
            }
            const std::vector<ResourceForDescribeNetworkAclAttributesOutput> &getResources() const { return  v_resources; }
            void setResources(const std::vector<ResourceForDescribeNetworkAclAttributesOutput> &s_resources ) {
                v_resources = s_resources;
            }
            const std::string &getStatus() const { return  v_status; }
            void setStatus(const std::string &s_status ) {
                v_status = s_status;
            }
            const std::string &getUpdateTime() const { return  v_updateTime; }
            void setUpdateTime(const std::string &s_updateTime ) {
                v_updateTime = s_updateTime;
            }
            const std::string &getVpcId() const { return  v_vpcId; }
            void setVpcId(const std::string &s_vpcId ) {
                v_vpcId = s_vpcId;
            }
        private:
            std::string v_creationTime;
            std::string v_description;
            std::vector<EgressAclEntryForDescribeNetworkAclAttributesOutput> v_egressAclEntries;
            std::vector<IngressAclEntryForDescribeNetworkAclAttributesOutput> v_ingressAclEntries;
            std::string v_networkAclId;
            std::string v_networkAclName;
            std::string v_projectName;
            std::vector<ResourceForDescribeNetworkAclAttributesOutput> v_resources;
            std::string v_status;
            std::string v_updateTime;
            std::string v_vpcId;
        };
    }
}
#endif // !VOLCENGINE_VPC_NETWORKACLATTRIBUTEFORDESCRIBENETWORKACLATTRIBUTESOUTPUT_H