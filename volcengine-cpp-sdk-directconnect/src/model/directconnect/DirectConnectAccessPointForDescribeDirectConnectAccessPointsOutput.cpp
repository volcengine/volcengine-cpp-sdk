/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#include "volcengine/directconnect/model/DirectConnectAccessPointForDescribeDirectConnectAccessPointsOutput.h"

using namespace volcengine;
using namespace volcengine::directconnect;
using namespace nlohmann;

void DirectConnectAccessPointForDescribeDirectConnectAccessPointsOutput::fromJsonString(const std::string &input) {
    auto j = json::parse(input);
    if (j.contains("Description")) j.at("Description").get_to(v_description);
    if (j.contains("DirectConnectAccessPointId")) j.at("DirectConnectAccessPointId").get_to(v_directConnectAccessPointId);
    if (j.contains("DirectConnectAccessPointName")) j.at("DirectConnectAccessPointName").get_to(v_directConnectAccessPointName);
    if (j.contains("LineOperators")){
        json lineOperatorsPres = j.at("LineOperators");
        for (auto & pre : lineOperatorsPres) {
           v_lineOperators.emplace_back(pre);
        }
    }
    if (j.contains("Location")) j.at("Location").get_to(v_location);
    if (j.contains("Status")) j.at("Status").get_to(v_status);
}
