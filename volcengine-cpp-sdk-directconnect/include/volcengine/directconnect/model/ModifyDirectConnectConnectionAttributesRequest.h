/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#ifndef VOLCENGINE_DIRECTCONNECT_MODIFYDIRECTCONNECTCONNECTIONATTRIBUTESREQUEST_H
#define VOLCENGINE_DIRECTCONNECT_MODIFYDIRECTCONNECTCONNECTIONATTRIBUTESREQUEST_H
#include <string>
#include <volcengine/core/RequestBuilder.h>

namespace volcengine{
    namespace directconnect{
        class ModifyDirectConnectConnectionAttributesRequest {
        public:
            ModifyDirectConnectConnectionAttributesRequest();
            ~ModifyDirectConnectConnectionAttributesRequest() = default;

            RequestBuilder withRequestBuilder(RequestBuilder rb, const std::string &chain)const;

            const std::string &getCustomerContactEmail()const { return  v_customerContactEmail; }
            bool CustomerContactEmailHasBeenSet() const { return v_customerContactEmailHasBeenSet; }
            void setCustomerContactEmail(const std::string &s_customerContactEmail ) {
                v_customerContactEmail = s_customerContactEmail;
                v_customerContactEmailHasBeenSet = true;
            }
            const std::string &getCustomerContactPhone()const { return  v_customerContactPhone; }
            bool CustomerContactPhoneHasBeenSet() const { return v_customerContactPhoneHasBeenSet; }
            void setCustomerContactPhone(const std::string &s_customerContactPhone ) {
                v_customerContactPhone = s_customerContactPhone;
                v_customerContactPhoneHasBeenSet = true;
            }
            const std::string &getCustomerName()const { return  v_customerName; }
            bool CustomerNameHasBeenSet() const { return v_customerNameHasBeenSet; }
            void setCustomerName(const std::string &s_customerName ) {
                v_customerName = s_customerName;
                v_customerNameHasBeenSet = true;
            }
            const std::string &getDescription()const { return  v_description; }
            bool DescriptionHasBeenSet() const { return v_descriptionHasBeenSet; }
            void setDescription(const std::string &s_description ) {
                v_description = s_description;
                v_descriptionHasBeenSet = true;
            }
            const std::string &getDirectConnectConnectionId()const { return  v_directConnectConnectionId; }
            bool DirectConnectConnectionIdHasBeenSet() const { return v_directConnectConnectionIdHasBeenSet; }
            void setDirectConnectConnectionId(const std::string &s_directConnectConnectionId ) {
                v_directConnectConnectionId = s_directConnectConnectionId;
                v_directConnectConnectionIdHasBeenSet = true;
            }
            const std::string &getDirectConnectConnectionName()const { return  v_directConnectConnectionName; }
            bool DirectConnectConnectionNameHasBeenSet() const { return v_directConnectConnectionNameHasBeenSet; }
            void setDirectConnectConnectionName(const std::string &s_directConnectConnectionName ) {
                v_directConnectConnectionName = s_directConnectConnectionName;
                v_directConnectConnectionNameHasBeenSet = true;
            }
        private:
            std::string v_customerContactEmail;
            bool v_customerContactEmailHasBeenSet;

            std::string v_customerContactPhone;
            bool v_customerContactPhoneHasBeenSet;

            std::string v_customerName;
            bool v_customerNameHasBeenSet;

            std::string v_description;
            bool v_descriptionHasBeenSet;

            std::string v_directConnectConnectionId;
            bool v_directConnectConnectionIdHasBeenSet;

            std::string v_directConnectConnectionName;
            bool v_directConnectConnectionNameHasBeenSet;

        };
    }
}
#endif // !VOLCENGINE_DIRECTCONNECT_MODIFYDIRECTCONNECTCONNECTIONATTRIBUTESREQUEST_H