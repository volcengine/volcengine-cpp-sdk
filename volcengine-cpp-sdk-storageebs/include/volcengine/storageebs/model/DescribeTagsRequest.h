/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#ifndef VOLCENGINE_STORAGEEBS_DESCRIBETAGSREQUEST_H
#define VOLCENGINE_STORAGEEBS_DESCRIBETAGSREQUEST_H
#include <string>
#include <volcengine/core/RequestBuilder.h>
#include "volcengine/storageebs/model/TagFilterForDescribeTagsInput.h"

namespace volcengine{
    namespace storageebs{
        class DescribeTagsRequest {
        public:
            DescribeTagsRequest();
            ~DescribeTagsRequest() = default;

            RequestBuilder withRequestBuilder(RequestBuilder rb, const std::string &chain)const;

            int getPageNumber()const { return  v_pageNumber; }
            bool PageNumberHasBeenSet() const { return v_pageNumberHasBeenSet; }
            void setPageNumber(const int s_pageNumber ) {
                v_pageNumber = s_pageNumber;
                v_pageNumberHasBeenSet = true;
            }
            int getPageSize()const { return  v_pageSize; }
            bool PageSizeHasBeenSet() const { return v_pageSizeHasBeenSet; }
            void setPageSize(const int s_pageSize ) {
                v_pageSize = s_pageSize;
                v_pageSizeHasBeenSet = true;
            }
            const std::vector<std::string> &getResourceIds()const { return  v_resourceIds; }
            bool ResourceIdsHasBeenSet() const { return v_resourceIdsHasBeenSet; }
            void setResourceIds(const std::vector<std::string> &s_resourceIds ) {
                v_resourceIds = s_resourceIds;
                v_resourceIdsHasBeenSet = true;
            }
            const std::string &getResourceType()const { return  v_resourceType; }
            bool ResourceTypeHasBeenSet() const { return v_resourceTypeHasBeenSet; }
            void setResourceType(const std::string &s_resourceType ) {
                v_resourceType = s_resourceType;
                v_resourceTypeHasBeenSet = true;
            }
            bool isSysTagVisible()const { return  v_sysTagVisible; }
            bool SysTagVisibleHasBeenSet() const { return v_sysTagVisibleHasBeenSet; }
            void setSysTagVisible(const bool s_sysTagVisible ) {
                v_sysTagVisible = s_sysTagVisible;
                v_sysTagVisibleHasBeenSet = true;
            }
            const std::vector<TagFilterForDescribeTagsInput> &getTagFilters()const { return  v_tagFilters; }
            bool TagFiltersHasBeenSet() const { return v_tagFiltersHasBeenSet; }
            void setTagFilters(const std::vector<TagFilterForDescribeTagsInput> &s_tagFilters ) {
                v_tagFilters = s_tagFilters;
                v_tagFiltersHasBeenSet = true;
            }
        private:
            int v_pageNumber;
            bool v_pageNumberHasBeenSet;

            int v_pageSize;
            bool v_pageSizeHasBeenSet;

            std::vector<std::string> v_resourceIds;
            bool v_resourceIdsHasBeenSet;

            std::string v_resourceType;
            bool v_resourceTypeHasBeenSet;

            bool v_sysTagVisible;
            bool v_sysTagVisibleHasBeenSet;

            std::vector<TagFilterForDescribeTagsInput> v_tagFilters;
            bool v_tagFiltersHasBeenSet;

        };
    }
}
#endif // !VOLCENGINE_STORAGEEBS_DESCRIBETAGSREQUEST_H