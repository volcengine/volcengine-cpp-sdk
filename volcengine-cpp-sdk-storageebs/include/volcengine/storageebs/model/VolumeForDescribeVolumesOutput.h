/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#ifndef VOLCENGINE_STORAGEEBS_VOLUMEFORDESCRIBEVOLUMESOUTPUT_H
#define VOLCENGINE_STORAGEEBS_VOLUMEFORDESCRIBEVOLUMESOUTPUT_H
#include <string>
#include <volcengine/core/RequestBuilder.h>
#include "volcengine/core/utils/json.hpp"
#include "volcengine/storageebs/model/TagForDescribeVolumesOutput.h"
namespace volcengine{
    namespace storageebs{
        class VolumeForDescribeVolumesOutput {
        public:
            VolumeForDescribeVolumesOutput() = default;
            ~VolumeForDescribeVolumesOutput() = default;
            void fromJsonString(const std::string &input);
            const std::string &getAutoSnapshotPolicyId() const { return  v_autoSnapshotPolicyId; }
            void setAutoSnapshotPolicyId(const std::string &s_autoSnapshotPolicyId ) {
                v_autoSnapshotPolicyId = s_autoSnapshotPolicyId;
            }
            const std::string &getAutoSnapshotPolicyName() const { return  v_autoSnapshotPolicyName; }
            void setAutoSnapshotPolicyName(const std::string &s_autoSnapshotPolicyName ) {
                v_autoSnapshotPolicyName = s_autoSnapshotPolicyName;
            }
            const int getBillingType() const { return  v_billingType; }
            void setBillingType(const int s_billingType ) {
                v_billingType = s_billingType;
            }
            const std::string &getCreatedAt() const { return  v_createdAt; }
            void setCreatedAt(const std::string &s_createdAt ) {
                v_createdAt = s_createdAt;
            }
            const bool isDeleteWithInstance() const { return  v_deleteWithInstance; }
            void setDeleteWithInstance(const bool s_deleteWithInstance ) {
                v_deleteWithInstance = s_deleteWithInstance;
            }
            const std::string &getDescription() const { return  v_description; }
            void setDescription(const std::string &s_description ) {
                v_description = s_description;
            }
            const std::string &getDeviceName() const { return  v_deviceName; }
            void setDeviceName(const std::string &s_deviceName ) {
                v_deviceName = s_deviceName;
            }
            const std::string &getErrorDetail() const { return  v_errorDetail; }
            void setErrorDetail(const std::string &s_errorDetail ) {
                v_errorDetail = s_errorDetail;
            }
            const std::string &getExpiredTime() const { return  v_expiredTime; }
            void setExpiredTime(const std::string &s_expiredTime ) {
                v_expiredTime = s_expiredTime;
            }
            const std::string &getImageId() const { return  v_imageId; }
            void setImageId(const std::string &s_imageId ) {
                v_imageId = s_imageId;
            }
            const std::string &getInstanceId() const { return  v_instanceId; }
            void setInstanceId(const std::string &s_instanceId ) {
                v_instanceId = s_instanceId;
            }
            const std::string &getKind() const { return  v_kind; }
            void setKind(const std::string &s_kind ) {
                v_kind = s_kind;
            }
            const std::string &getOverdueReclaimTime() const { return  v_overdueReclaimTime; }
            void setOverdueReclaimTime(const std::string &s_overdueReclaimTime ) {
                v_overdueReclaimTime = s_overdueReclaimTime;
            }
            const std::string &getOverdueTime() const { return  v_overdueTime; }
            void setOverdueTime(const std::string &s_overdueTime ) {
                v_overdueTime = s_overdueTime;
            }
            const std::string &getPayType() const { return  v_payType; }
            void setPayType(const std::string &s_payType ) {
                v_payType = s_payType;
            }
            const std::string &getProjectName() const { return  v_projectName; }
            void setProjectName(const std::string &s_projectName ) {
                v_projectName = s_projectName;
            }
            const int getRenewType() const { return  v_renewType; }
            void setRenewType(const int s_renewType ) {
                v_renewType = s_renewType;
            }
            const std::string &getSize() const { return  v_size; }
            void setSize(const std::string &s_size ) {
                v_size = s_size;
            }
            const int getSnapshotCount() const { return  v_snapshotCount; }
            void setSnapshotCount(const int s_snapshotCount ) {
                v_snapshotCount = s_snapshotCount;
            }
            const std::string &getSourceSnapshotId() const { return  v_sourceSnapshotId; }
            void setSourceSnapshotId(const std::string &s_sourceSnapshotId ) {
                v_sourceSnapshotId = s_sourceSnapshotId;
            }
            const std::string &getStatus() const { return  v_status; }
            void setStatus(const std::string &s_status ) {
                v_status = s_status;
            }
            const std::vector<TagForDescribeVolumesOutput> &getTags() const { return  v_tags; }
            void setTags(const std::vector<TagForDescribeVolumesOutput> &s_tags ) {
                v_tags = s_tags;
            }
            const int getTradeStatus() const { return  v_tradeStatus; }
            void setTradeStatus(const int s_tradeStatus ) {
                v_tradeStatus = s_tradeStatus;
            }
            const std::string &getUpdatedAt() const { return  v_updatedAt; }
            void setUpdatedAt(const std::string &s_updatedAt ) {
                v_updatedAt = s_updatedAt;
            }
            const std::string &getVolumeId() const { return  v_volumeId; }
            void setVolumeId(const std::string &s_volumeId ) {
                v_volumeId = s_volumeId;
            }
            const std::string &getVolumeName() const { return  v_volumeName; }
            void setVolumeName(const std::string &s_volumeName ) {
                v_volumeName = s_volumeName;
            }
            const std::string &getVolumeType() const { return  v_volumeType; }
            void setVolumeType(const std::string &s_volumeType ) {
                v_volumeType = s_volumeType;
            }
            const std::string &getZoneId() const { return  v_zoneId; }
            void setZoneId(const std::string &s_zoneId ) {
                v_zoneId = s_zoneId;
            }
        private:
            std::string v_autoSnapshotPolicyId;
            std::string v_autoSnapshotPolicyName;
            int v_billingType{};
            std::string v_createdAt;
            bool v_deleteWithInstance{};
            std::string v_description;
            std::string v_deviceName;
            std::string v_errorDetail;
            std::string v_expiredTime;
            std::string v_imageId;
            std::string v_instanceId;
            std::string v_kind;
            std::string v_overdueReclaimTime;
            std::string v_overdueTime;
            std::string v_payType;
            std::string v_projectName;
            int v_renewType{};
            std::string v_size;
            int v_snapshotCount{};
            std::string v_sourceSnapshotId;
            std::string v_status;
            std::vector<TagForDescribeVolumesOutput> v_tags;
            int v_tradeStatus{};
            std::string v_updatedAt;
            std::string v_volumeId;
            std::string v_volumeName;
            std::string v_volumeType;
            std::string v_zoneId;
        };
    }
}
#endif // !VOLCENGINE_STORAGEEBS_VOLUMEFORDESCRIBEVOLUMESOUTPUT_H