/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#ifndef VOLCENGINE_STORAGEEBS_MODIFYVOLUMECHARGETYPEREQUEST_H
#define VOLCENGINE_STORAGEEBS_MODIFYVOLUMECHARGETYPEREQUEST_H
#include <string>
#include <volcengine/core/RequestBuilder.h>

namespace volcengine{
    namespace storageebs{
        class ModifyVolumeChargeTypeRequest {
        public:
            ModifyVolumeChargeTypeRequest();
            ~ModifyVolumeChargeTypeRequest() = default;

            RequestBuilder withRequestBuilder(RequestBuilder rb, const std::string &chain)const;

            bool isAutoPay()const { return  v_autoPay; }
            bool AutoPayHasBeenSet() const { return v_autoPayHasBeenSet; }
            void setAutoPay(const bool s_autoPay ) {
                v_autoPay = s_autoPay;
                v_autoPayHasBeenSet = true;
            }
            const std::string &getDiskChargeType()const { return  v_diskChargeType; }
            bool DiskChargeTypeHasBeenSet() const { return v_diskChargeTypeHasBeenSet; }
            void setDiskChargeType(const std::string &s_diskChargeType ) {
                v_diskChargeType = s_diskChargeType;
                v_diskChargeTypeHasBeenSet = true;
            }
            const std::string &getInstanceId()const { return  v_instanceId; }
            bool InstanceIdHasBeenSet() const { return v_instanceIdHasBeenSet; }
            void setInstanceId(const std::string &s_instanceId ) {
                v_instanceId = s_instanceId;
                v_instanceIdHasBeenSet = true;
            }
            const std::vector<std::string> &getVolumeIds()const { return  v_volumeIds; }
            bool VolumeIdsHasBeenSet() const { return v_volumeIdsHasBeenSet; }
            void setVolumeIds(const std::vector<std::string> &s_volumeIds ) {
                v_volumeIds = s_volumeIds;
                v_volumeIdsHasBeenSet = true;
            }
        private:
            bool v_autoPay;
            bool v_autoPayHasBeenSet;

            std::string v_diskChargeType;
            bool v_diskChargeTypeHasBeenSet;

            std::string v_instanceId;
            bool v_instanceIdHasBeenSet;

            std::vector<std::string> v_volumeIds;
            bool v_volumeIdsHasBeenSet;

        };
    }
}
#endif // !VOLCENGINE_STORAGEEBS_MODIFYVOLUMECHARGETYPEREQUEST_H