/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#ifndef VOLCENGINE_STORAGEEBS_MODIFYVOLUMEATTRIBUTEREQUEST_H
#define VOLCENGINE_STORAGEEBS_MODIFYVOLUMEATTRIBUTEREQUEST_H
#include <string>
#include <volcengine/core/RequestBuilder.h>

namespace volcengine{
    namespace storageebs{
        class ModifyVolumeAttributeRequest {
        public:
            ModifyVolumeAttributeRequest();
            ~ModifyVolumeAttributeRequest() = default;

            RequestBuilder withRequestBuilder(RequestBuilder rb, const std::string &chain)const;

            bool isDeleteWithInstance()const { return  v_deleteWithInstance; }
            bool DeleteWithInstanceHasBeenSet() const { return v_deleteWithInstanceHasBeenSet; }
            void setDeleteWithInstance(const bool s_deleteWithInstance ) {
                v_deleteWithInstance = s_deleteWithInstance;
                v_deleteWithInstanceHasBeenSet = true;
            }
            const std::string &getDescription()const { return  v_description; }
            bool DescriptionHasBeenSet() const { return v_descriptionHasBeenSet; }
            void setDescription(const std::string &s_description ) {
                v_description = s_description;
                v_descriptionHasBeenSet = true;
            }
            const std::string &getVolumeId()const { return  v_volumeId; }
            bool VolumeIdHasBeenSet() const { return v_volumeIdHasBeenSet; }
            void setVolumeId(const std::string &s_volumeId ) {
                v_volumeId = s_volumeId;
                v_volumeIdHasBeenSet = true;
            }
            const std::string &getVolumeName()const { return  v_volumeName; }
            bool VolumeNameHasBeenSet() const { return v_volumeNameHasBeenSet; }
            void setVolumeName(const std::string &s_volumeName ) {
                v_volumeName = s_volumeName;
                v_volumeNameHasBeenSet = true;
            }
        private:
            bool v_deleteWithInstance;
            bool v_deleteWithInstanceHasBeenSet;

            std::string v_description;
            bool v_descriptionHasBeenSet;

            std::string v_volumeId;
            bool v_volumeIdHasBeenSet;

            std::string v_volumeName;
            bool v_volumeNameHasBeenSet;

        };
    }
}
#endif // !VOLCENGINE_STORAGEEBS_MODIFYVOLUMEATTRIBUTEREQUEST_H