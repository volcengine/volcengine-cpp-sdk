/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#ifndef VOLCENGINE_STORAGEEBS_DESCRIBEVOLUMESREQUEST_H
#define VOLCENGINE_STORAGEEBS_DESCRIBEVOLUMESREQUEST_H
#include <string>
#include <volcengine/core/RequestBuilder.h>
#include "volcengine/storageebs/model/TagFilterForDescribeVolumesInput.h"

namespace volcengine{
    namespace storageebs{
        class DescribeVolumesRequest {
        public:
            DescribeVolumesRequest();
            ~DescribeVolumesRequest() = default;

            RequestBuilder withRequestBuilder(RequestBuilder rb, const std::string &chain)const;

            const std::string &getInstanceId()const { return  v_instanceId; }
            bool InstanceIdHasBeenSet() const { return v_instanceIdHasBeenSet; }
            void setInstanceId(const std::string &s_instanceId ) {
                v_instanceId = s_instanceId;
                v_instanceIdHasBeenSet = true;
            }
            const std::string &getKind()const { return  v_kind; }
            bool KindHasBeenSet() const { return v_kindHasBeenSet; }
            void setKind(const std::string &s_kind ) {
                v_kind = s_kind;
                v_kindHasBeenSet = true;
            }
            int getPageNumber()const { return  v_pageNumber; }
            bool PageNumberHasBeenSet() const { return v_pageNumberHasBeenSet; }
            void setPageNumber(const int s_pageNumber ) {
                v_pageNumber = s_pageNumber;
                v_pageNumberHasBeenSet = true;
            }
            int getPageSize()const { return  v_pageSize; }
            bool PageSizeHasBeenSet() const { return v_pageSizeHasBeenSet; }
            void setPageSize(const int s_pageSize ) {
                v_pageSize = s_pageSize;
                v_pageSizeHasBeenSet = true;
            }
            const std::string &getProjectName()const { return  v_projectName; }
            bool ProjectNameHasBeenSet() const { return v_projectNameHasBeenSet; }
            void setProjectName(const std::string &s_projectName ) {
                v_projectName = s_projectName;
                v_projectNameHasBeenSet = true;
            }
            const std::vector<TagFilterForDescribeVolumesInput> &getTagFilters()const { return  v_tagFilters; }
            bool TagFiltersHasBeenSet() const { return v_tagFiltersHasBeenSet; }
            void setTagFilters(const std::vector<TagFilterForDescribeVolumesInput> &s_tagFilters ) {
                v_tagFilters = s_tagFilters;
                v_tagFiltersHasBeenSet = true;
            }
            const std::vector<std::string> &getVolumeIds()const { return  v_volumeIds; }
            bool VolumeIdsHasBeenSet() const { return v_volumeIdsHasBeenSet; }
            void setVolumeIds(const std::vector<std::string> &s_volumeIds ) {
                v_volumeIds = s_volumeIds;
                v_volumeIdsHasBeenSet = true;
            }
            const std::string &getVolumeName()const { return  v_volumeName; }
            bool VolumeNameHasBeenSet() const { return v_volumeNameHasBeenSet; }
            void setVolumeName(const std::string &s_volumeName ) {
                v_volumeName = s_volumeName;
                v_volumeNameHasBeenSet = true;
            }
            const std::string &getVolumeStatus()const { return  v_volumeStatus; }
            bool VolumeStatusHasBeenSet() const { return v_volumeStatusHasBeenSet; }
            void setVolumeStatus(const std::string &s_volumeStatus ) {
                v_volumeStatus = s_volumeStatus;
                v_volumeStatusHasBeenSet = true;
            }
            const std::string &getVolumeType()const { return  v_volumeType; }
            bool VolumeTypeHasBeenSet() const { return v_volumeTypeHasBeenSet; }
            void setVolumeType(const std::string &s_volumeType ) {
                v_volumeType = s_volumeType;
                v_volumeTypeHasBeenSet = true;
            }
            const std::string &getZoneId()const { return  v_zoneId; }
            bool ZoneIdHasBeenSet() const { return v_zoneIdHasBeenSet; }
            void setZoneId(const std::string &s_zoneId ) {
                v_zoneId = s_zoneId;
                v_zoneIdHasBeenSet = true;
            }
        private:
            std::string v_instanceId;
            bool v_instanceIdHasBeenSet;

            std::string v_kind;
            bool v_kindHasBeenSet;

            int v_pageNumber;
            bool v_pageNumberHasBeenSet;

            int v_pageSize;
            bool v_pageSizeHasBeenSet;

            std::string v_projectName;
            bool v_projectNameHasBeenSet;

            std::vector<TagFilterForDescribeVolumesInput> v_tagFilters;
            bool v_tagFiltersHasBeenSet;

            std::vector<std::string> v_volumeIds;
            bool v_volumeIdsHasBeenSet;

            std::string v_volumeName;
            bool v_volumeNameHasBeenSet;

            std::string v_volumeStatus;
            bool v_volumeStatusHasBeenSet;

            std::string v_volumeType;
            bool v_volumeTypeHasBeenSet;

            std::string v_zoneId;
            bool v_zoneIdHasBeenSet;

        };
    }
}
#endif // !VOLCENGINE_STORAGEEBS_DESCRIBEVOLUMESREQUEST_H