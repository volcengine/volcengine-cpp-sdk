/*
* Code generated by Beijing Volcanoengine Technology.Do NOT EDIT.
* Copyright Beijing Volcanoengine Technology Ltd All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#ifndef VOLCENGINE_STORAGEEBS_STORAGEEBSCLIENT_H
#define VOLCENGINE_STORAGEEBS_STORAGEEBSCLIENT_H
#include <string>
#include <volcengine/core/ResultData.h>
#include <volcengine/core/VolcengineMetaData.h>
#include <volcengine/core/VolcengineClient.h>
#include "volcengine/storageebs/model/AttachVolumeRequest.h"
#include "volcengine/storageebs/model/AttachVolumeResult.h"
#include "volcengine/storageebs/model/CreateTagsRequest.h"
#include "volcengine/storageebs/model/CreateTagsResult.h"
#include "volcengine/storageebs/model/CreateVolumeRequest.h"
#include "volcengine/storageebs/model/CreateVolumeResult.h"
#include "volcengine/storageebs/model/DeleteTagsRequest.h"
#include "volcengine/storageebs/model/DeleteTagsResult.h"
#include "volcengine/storageebs/model/DeleteVolumeRequest.h"
#include "volcengine/storageebs/model/DeleteVolumeResult.h"
#include "volcengine/storageebs/model/DescribeTagsRequest.h"
#include "volcengine/storageebs/model/DescribeTagsResult.h"
#include "volcengine/storageebs/model/DescribeVolumesRequest.h"
#include "volcengine/storageebs/model/DescribeVolumesResult.h"
#include "volcengine/storageebs/model/DetachVolumeRequest.h"
#include "volcengine/storageebs/model/DetachVolumeResult.h"
#include "volcengine/storageebs/model/ExtendVolumeRequest.h"
#include "volcengine/storageebs/model/ExtendVolumeResult.h"
#include "volcengine/storageebs/model/ModifyVolumeAttributeRequest.h"
#include "volcengine/storageebs/model/ModifyVolumeAttributeResult.h"
#include "volcengine/storageebs/model/ModifyVolumeChargeTypeRequest.h"
#include "volcengine/storageebs/model/ModifyVolumeChargeTypeResult.h"
#include "volcengine/storageebs/model/TerminateVolumesRequest.h"
#include "volcengine/storageebs/model/TerminateVolumesResult.h"
namespace volcengine{
    namespace storageebs{
        class StorageebsClient {
        public:
            explicit StorageebsClient(const std::shared_ptr<VolcengineClientConfig> &config);

            ~StorageebsClient() = default;

            ResultData<VolcengineMetadata, AttachVolumeResult> AttachVolume(const AttachVolumeRequest &input) const;

            ResultData<VolcengineMetadata, CreateTagsResult> CreateTags(const CreateTagsRequest &input) const;

            ResultData<VolcengineMetadata, CreateVolumeResult> CreateVolume(const CreateVolumeRequest &input) const;

            ResultData<VolcengineMetadata, DeleteTagsResult> DeleteTags(const DeleteTagsRequest &input) const;

            ResultData<VolcengineMetadata, DeleteVolumeResult> DeleteVolume(const DeleteVolumeRequest &input) const;

            ResultData<VolcengineMetadata, DescribeTagsResult> DescribeTags(const DescribeTagsRequest &input) const;

            ResultData<VolcengineMetadata, DescribeVolumesResult> DescribeVolumes(const DescribeVolumesRequest &input) const;

            ResultData<VolcengineMetadata, DetachVolumeResult> DetachVolume(const DetachVolumeRequest &input) const;

            ResultData<VolcengineMetadata, ExtendVolumeResult> ExtendVolume(const ExtendVolumeRequest &input) const;

            ResultData<VolcengineMetadata, ModifyVolumeAttributeResult> ModifyVolumeAttribute(const ModifyVolumeAttributeRequest &input) const;

            ResultData<VolcengineMetadata, ModifyVolumeChargeTypeResult> ModifyVolumeChargeType(const ModifyVolumeChargeTypeRequest &input) const;

            ResultData<VolcengineMetadata, TerminateVolumesResult> TerminateVolumes(const TerminateVolumesRequest &input) const;

        private:
            std::shared_ptr<VolcengineClient> client_;
            std::string svc_ = "storage_ebs";
        };
    }
}
#endif // !VOLCENGINE_STORAGEEBS_STORAGEEBSCLIENT_H